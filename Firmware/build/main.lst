ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB54:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "GEVA.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "stm32_ssd1306_i2c.h"
  27:Core/Src/main.c **** #include "stm32_max6675.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** #define CHAR_BUFF_SIZE 6
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  51:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** UART_HandleTypeDef huart1;
  57:Core/Src/main.c **** UART_HandleTypeDef huart2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** static void MX_GPIO_Init(void);
  66:Core/Src/main.c **** static void MX_I2C1_Init(void);
  67:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  68:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  69:Core/Src/main.c **** static void MX_ADC_Init(void);
  70:Core/Src/main.c **** static void MX_SPI1_Init(void);
  71:Core/Src/main.c **** static void MX_SPI2_Init(void);
  72:Core/Src/main.c **** static void MX_TIM3_Init(void);
  73:Core/Src/main.c **** static void MX_TIM16_Init(void);
  74:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** //float to string function
  82:Core/Src/main.c **** char * float_to_char(float x, char *p) {
  83:Core/Src/main.c ****     char *s = p + CHAR_BUFF_SIZE; // go to end of buffer
  84:Core/Src/main.c ****     uint16_t decimals;  // variable to store the decimals
  85:Core/Src/main.c ****     int units;  // variable to store the units (part to left of decimal place)
  86:Core/Src/main.c ****     if (x < 0) { // take care of negative numbers
  87:Core/Src/main.c ****         decimals = (int)(x * -100) % 100; // make 1000 for 3 decimals etc.
  88:Core/Src/main.c ****         units = (int)(-1 * x);
  89:Core/Src/main.c ****     } else { // positive numbers
  90:Core/Src/main.c ****         decimals = (int)(x * 100) % 100;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 3


  91:Core/Src/main.c ****         units = (int)x;
  92:Core/Src/main.c ****     }
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     *--s = (decimals % 10) + '0';
  95:Core/Src/main.c ****     decimals /= 10; // repeat for as many decimal places as you need
  96:Core/Src/main.c ****     *--s = (decimals % 10) + '0';
  97:Core/Src/main.c ****     *--s = '.';
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     while (units > 0) {
 100:Core/Src/main.c ****         *--s = (units % 10) + '0';
 101:Core/Src/main.c ****         units /= 10;
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     if (x < 0) *--s = '-'; // unary minus sign for negative numbers
 104:Core/Src/main.c ****     return s;
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* USER CODE END 0 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief  The application entry point.
 113:Core/Src/main.c ****   * @retval int
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** int main(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //-------vbc_file start-------
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** vbc_file mamma_mia;
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** mamma_mia.header.id = 0xa7;
 124:Core/Src/main.c **** mamma_mia.header.width = 0x7f;
 125:Core/Src/main.c **** mamma_mia.header.height = 0x3f;
 126:Core/Src/main.c **** mamma_mia.header.byte_cnt_h = 0x03;
 127:Core/Src/main.c **** mamma_mia.header.byte_cnt_l = 0xf5;
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** uint8_t mamma_mia_sv[1008] = 
 130:Core/Src/main.c **** {
 131:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
 132:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x08, 0x00, 0x06, 0x01, 0x00, 
 133:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 
 134:Core/Src/main.c **** 	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x10, 0x08, 0x04, 0x03, 0x83, 0x00, 
 135:Core/Src/main.c **** 	0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x10, 0x08, 0x06, 0x00, 0x02, 0x00, 
 136:Core/Src/main.c **** 	0x10, 0x18, 0x30, 0x00, 0x6c, 0x20, 0x00, 0x00, 0x01, 0x02, 0x10, 0x08, 0x03, 0x00, 0x0e, 0x00, 
 137:Core/Src/main.c **** 	0x18, 0x28, 0x30, 0x38, 0xee, 0x60, 0x00, 0x00, 0x01, 0x82, 0x10, 0x0c, 0x01, 0xc1, 0xf8, 0x00, 
 138:Core/Src/main.c **** 	0x1c, 0x68, 0x78, 0x6c, 0xaa, 0xe3, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
 139:Core/Src/main.c **** 	0x16, 0x48, 0x48, 0x45, 0xab, 0xa7, 0x80, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 
 140:Core/Src/main.c **** 	0x13, 0xc8, 0x48, 0x47, 0x29, 0xa4, 0x80, 0x00, 0x00, 0x63, 0x87, 0x7b, 0xff, 0xe7, 0x00, 0x00, 
 141:Core/Src/main.c **** 	0x10, 0x08, 0x8c, 0x46, 0x29, 0x24, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
 142:Core/Src/main.c **** 	0x10, 0x08, 0x84, 0x46, 0x28, 0x24, 0xc0, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
 143:Core/Src/main.c **** 	0x10, 0x08, 0x84, 0x40, 0x28, 0x24, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
 144:Core/Src/main.c **** 	0x10, 0x08, 0x84, 0x40, 0x28, 0x27, 0xf0, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
 145:Core/Src/main.c **** 	0x10, 0x09, 0xfe, 0x40, 0x28, 0x24, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
 146:Core/Src/main.c **** 	0x10, 0x09, 0x02, 0x40, 0x28, 0x2c, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 
 147:Core/Src/main.c **** 	0x10, 0x09, 0x02, 0x40, 0x28, 0x28, 0x40, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 4


 148:Core/Src/main.c **** 	0x10, 0x09, 0x03, 0x40, 0x28, 0x28, 0x00, 0x00, 0x04, 0x18, 0x00, 0x1f, 0xff, 0xe4, 0x00, 0x00, 
 149:Core/Src/main.c **** 	0x10, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x04, 0x0f, 0xff, 0xf0, 0x00, 0x3e, 0x00, 0x00, 
 150:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x04, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
 151:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x11, 0xc4, 0x18, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
 152:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x11, 0x44, 0x10, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
 153:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x11, 0x64, 0x10, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 
 154:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x21, 0x13, 0x24, 0x10, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 
 155:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x1c, 0x40, 0x21, 0x12, 0x24, 0x30, 0x1f, 0x00, 0x1f, 0x00, 0x80, 0x00, 
 156:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x30, 0x40, 0x21, 0x12, 0x20, 0x20, 0x7f, 0x80, 0x1f, 0x80, 0x80, 0x00, 
 157:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x21, 0x13, 0xe0, 0x20, 0x7f, 0xc0, 0x3f, 0xc0, 0x80, 0x00, 
 158:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x20, 0xc0, 0x21, 0x16, 0x20, 0x20, 0x7f, 0x40, 0x3f, 0x40, 0x80, 0x00, 
 159:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 0x00, 0x04, 0x24, 0x20, 0x7e, 0x40, 0x7e, 0x60, 0x80, 0x00, 
 160:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x3c, 0x61, 0x80, 0x00, 0x00, 0x24, 0x20, 0x3e, 0x60, 0x1f, 0xc0, 0x80, 0x00, 
 161:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x64, 0x41, 0x00, 0x00, 0x00, 0x00, 0x20, 0x03, 0xe0, 0x00, 0x00, 0x80, 0x00, 
 162:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x44, 0x43, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 
 163:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0xc4, 0x42, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x00, 0x00, 0x80, 0x00, 
 164:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x84, 0x42, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x80, 0x00, 0x80, 0x00, 
 165:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x84, 0x42, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x30, 0x00, 0x00, 0x80, 0x00, 
 166:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x84, 0x42, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x01, 0x80, 0x00, 
 167:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x84, 0x42, 0x00, 0x00, 0x00, 0x00, 0x20, 0x7c, 0x20, 0x7f, 0xfd, 0x00, 0x00, 
 168:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x84, 0x42, 0x00, 0x00, 0x00, 0x00, 0x21, 0xff, 0xf0, 0x7f, 0xff, 0x00, 0x00, 
 169:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0xc4, 0xc2, 0x03, 0xf8, 0x00, 0x00, 0x27, 0xff, 0xf8, 0xff, 0xff, 0x0f, 0x80, 
 170:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x46, 0x82, 0x0e, 0x0c, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0xf8, 0x1f, 0x0f, 0xc0, 
 171:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x42, 0x82, 0x18, 0x06, 0x01, 0xc0, 0x1f, 0xff, 0xff, 0xf0, 0x0f, 0x8c, 0xe0, 
 172:Core/Src/main.c **** 	0x00, 0x00, 0x01, 0xe3, 0x83, 0x30, 0x02, 0x07, 0xe0, 0x3c, 0x00, 0x3f, 0xe0, 0x07, 0x80, 0x60, 
 173:Core/Src/main.c **** 	0x00, 0x00, 0x03, 0x61, 0xc1, 0xe0, 0x03, 0x0e, 0x70, 0xb8, 0x00, 0x1f, 0xe7, 0x83, 0xc0, 0x60, 
 174:Core/Src/main.c **** 	0x00, 0x00, 0x02, 0x71, 0xc0, 0xc3, 0xe0, 0xcc, 0x30, 0xfc, 0x00, 0x16, 0xfc, 0x83, 0xc0, 0x60, 
 175:Core/Src/main.c **** 	0x00, 0x00, 0x02, 0x50, 0xe0, 0x06, 0x30, 0x4c, 0x01, 0xe6, 0x01, 0xc1, 0xc1, 0x82, 0xe0, 0xe0, 
 176:Core/Src/main.c **** 	0x00, 0x00, 0x02, 0x78, 0x60, 0x04, 0x18, 0x4c, 0x03, 0xe2, 0x00, 0xfe, 0x03, 0x04, 0x7f, 0xe0, 
 177:Core/Src/main.c **** 	0x00, 0x00, 0x02, 0x2c, 0x00, 0x0c, 0x0f, 0xce, 0x03, 0xc3, 0x00, 0x60, 0x0e, 0x0c, 0x3f, 0xc0, 
 178:Core/Src/main.c **** 	0x00, 0x00, 0x03, 0x36, 0x00, 0x08, 0x19, 0x87, 0x0f, 0xc1, 0x80, 0x38, 0x38, 0x08, 0x3f, 0x80, 
 179:Core/Src/main.c **** 	0x00, 0x00, 0x01, 0x1f, 0x00, 0x00, 0x18, 0x87, 0xff, 0x80, 0x80, 0x0f, 0xe0, 0x18, 0x00, 0x00, 
 180:Core/Src/main.c **** 	0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x30, 0x83, 0xff, 0x00, 0xc0, 0x00, 0x00, 0x30, 0x00, 0x00, 
 181:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0xc0, 0x00, 0x1f, 0xe0, 0x81, 0xfc, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 
 182:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x38, 0x00, 0x01, 0xe0, 0x00, 0x00, 
 183:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x03, 0x30, 0x00, 0x00, 
 184:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x18, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x61, 0xe0, 0x1e, 0x10, 0x00, 0x00, 
 185:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0xf0, 0x18, 0x00, 0x00, 
 186:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x30, 0x00, 0x00, 0x07, 0xb0, 0x07, 0x00, 0x3c, 0x00, 0x00, 
 187:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x01, 0x86, 0x00, 0xe0, 0x00, 0x00, 0x1d, 0x18, 0x07, 0x80, 0x66, 0x00, 0x00, 
 188:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0xc3, 0x8f, 0x80, 0x00, 0x00, 0xf0, 0x0e, 0x0f, 0xe1, 0xc3, 0x00, 0x00, 
 189:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x03, 0x81, 0x03, 0xc8, 0x37, 0x01, 0x80, 0x00, 
 190:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x78, 0xfc, 0x00, 0xc0, 0x00, 
 191:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x80, 0x00, 0x60, 0x00, 
 192:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x4f, 0xdc, 0x00, 0x00, 0x38, 0x00, 0x00, 0x03, 0x00, 0x00, 0x20, 0x00, 
 193:Core/Src/main.c **** 	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00
 194:Core/Src/main.c **** };
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** mamma_mia.body = mamma_mia_sv;
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** //-------vbc_file stop -------
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END 1 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 5


 205:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 206:Core/Src/main.c ****   HAL_Init();
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END Init */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* Configure the system clock */
 213:Core/Src/main.c ****   SystemClock_Config();
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END SysInit */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* Initialize all configured peripherals */
 220:Core/Src/main.c ****   MX_GPIO_Init();
 221:Core/Src/main.c ****   MX_I2C1_Init();
 222:Core/Src/main.c ****   MX_USART1_UART_Init();
 223:Core/Src/main.c ****   MX_USART2_UART_Init();
 224:Core/Src/main.c ****   MX_ADC_Init();
 225:Core/Src/main.c ****   MX_SPI1_Init();
 226:Core/Src/main.c ****   MX_SPI2_Init();
 227:Core/Src/main.c ****   MX_TIM3_Init();
 228:Core/Src/main.c ****   MX_TIM16_Init();
 229:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   video_buffer vb;  //lcd video buffer
 232:Core/Src/main.c ****   init_buf(&vb,128,64);
 233:Core/Src/main.c ****   init_display(0x78,&hi2c1);  //addr = 0x3c<<1
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   
 236:Core/Src/main.c ****   set_mode(INVERTED,&vb);
 237:Core/Src/main.c ****   //put_pixel(10,10,SET_C,&vb);
 238:Core/Src/main.c ****   //put_circle(20,20,10,&vb);
 239:Core/Src/main.c ****   
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   max6675 max6675A;
 242:Core/Src/main.c ****   max6675 max6675B;
 243:Core/Src/main.c ****   max6675_init(&max6675A,CS_A_GPIO_Port,CS_A_Pin,&hspi1);
 244:Core/Src/main.c ****   max6675_init(&max6675B,CS_B_GPIO_Port,CS_B_Pin,&hspi1);
 245:Core/Src/main.c ****   
 246:Core/Src/main.c ****   char temp_str[] = {32,32,32,32,32,32};
 247:Core/Src/main.c ****   //char temp_str[] = {0,0,0,0,0,0};
 248:Core/Src/main.c ****  
 249:Core/Src/main.c ****   put_vbc(mamma_mia,0,1,&vb);
 250:Core/Src/main.c ****   update_display(&vb);
 251:Core/Src/main.c ****   
 252:Core/Src/main.c ****   HAL_Delay(1500);    
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   
 255:Core/Src/main.c ****   //put_string(0,0,temp_str,SMALL,&vb);
 256:Core/Src/main.c ****   //put_string(0,40,"temp_str",SMALL,&vb);
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END 2 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 6


 262:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   while (1)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****     
 270:Core/Src/main.c ****     //clear_sector(0,0,60,15,&vb);
 271:Core/Src/main.c ****     max6675_read_temp(max6675B);
 272:Core/Src/main.c ****     //put_string(0,0,"MAMMA MIA",MEDIUM,&vb);
 273:Core/Src/main.c ****     HAL_GPIO_TogglePin(SSR_A_GPIO_Port,SSR_A_Pin);
 274:Core/Src/main.c ****     //float_to_char(max6675_read_temp(max6675A),temp_str);
 275:Core/Src/main.c ****     /*for(uint8_t i=0; i< CHAR_BUFF_SIZE; i++)
 276:Core/Src/main.c ****       put_char(i*10,0,temp_str[i],MEDIUM,&vb);
 277:Core/Src/main.c **** */
 278:Core/Src/main.c ****     put_char(0,0,'K',MEDIUM,&vb);
 279:Core/Src/main.c ****     
 280:Core/Src/main.c ****     //put_circle(10,10,5,&vb);
 281:Core/Src/main.c ****     
 282:Core/Src/main.c ****     update_display(&vb);
 283:Core/Src/main.c ****     HAL_Delay(500);    
 284:Core/Src/main.c ****   
 285:Core/Src/main.c ****     /* USER CODE END WHILE */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   /* USER CODE END 3 */
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief System Clock Configuration
 294:Core/Src/main.c ****   * @retval None
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c **** void SystemClock_Config(void)
 297:Core/Src/main.c **** {
 298:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 299:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 300:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 303:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 307:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 308:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 309:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 311:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 312:Core/Src/main.c ****   {
 313:Core/Src/main.c ****     Error_Handler();
 314:Core/Src/main.c ****   }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 7


 319:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 320:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 321:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 322:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 329:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 330:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 331:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief ADC Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_ADC_Init(void)
 343:Core/Src/main.c **** {
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 356:Core/Src/main.c ****   */
 357:Core/Src/main.c ****   hadc.Instance = ADC1;
 358:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 359:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 360:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 361:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 362:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 363:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 364:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 365:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 366:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 367:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 368:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 369:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 370:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 371:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
 374:Core/Src/main.c ****   }
 375:Core/Src/main.c **** 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 8


 376:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 379:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 380:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 381:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 382:Core/Src/main.c ****   {
 383:Core/Src/main.c ****     Error_Handler();
 384:Core/Src/main.c ****   }
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 387:Core/Src/main.c ****   */
 388:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 389:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****     Error_Handler();
 392:Core/Src/main.c ****   }
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 395:Core/Src/main.c ****   */
 396:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 397:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****     Error_Handler();
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 403:Core/Src/main.c ****   */
 404:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 405:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 406:Core/Src/main.c ****   {
 407:Core/Src/main.c ****     Error_Handler();
 408:Core/Src/main.c ****   }
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 411:Core/Src/main.c ****   */
 412:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 413:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 414:Core/Src/main.c ****   {
 415:Core/Src/main.c ****     Error_Handler();
 416:Core/Src/main.c ****   }
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 419:Core/Src/main.c ****   */
 420:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_9;
 421:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 422:Core/Src/main.c ****   {
 423:Core/Src/main.c ****     Error_Handler();
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** }
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** /**
 432:Core/Src/main.c ****   * @brief I2C1 Initialization Function
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 9


 433:Core/Src/main.c ****   * @param None
 434:Core/Src/main.c ****   * @retval None
 435:Core/Src/main.c ****   */
 436:Core/Src/main.c **** static void MX_I2C1_Init(void)
 437:Core/Src/main.c **** {
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 446:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 447:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00000102;
 448:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 449:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 450:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 451:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 452:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 453:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 454:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 455:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /** Configure Analogue filter
 461:Core/Src/main.c ****   */
 462:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 463:Core/Src/main.c ****   {
 464:Core/Src/main.c ****     Error_Handler();
 465:Core/Src/main.c ****   }
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /** Configure Digital filter
 468:Core/Src/main.c ****   */
 469:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     Error_Handler();
 472:Core/Src/main.c ****   }
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /** I2C Fast mode Plus enable
 475:Core/Src/main.c ****   */
 476:Core/Src/main.c ****   __HAL_SYSCFG_FASTMODEPLUS_ENABLE(I2C_FASTMODEPLUS_I2C1);
 477:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c **** }
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** /**
 484:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 485:Core/Src/main.c ****   * @param None
 486:Core/Src/main.c ****   * @retval None
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c **** static void MX_SPI1_Init(void)
 489:Core/Src/main.c **** {
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 10


 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 498:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 499:Core/Src/main.c ****   hspi1.Instance = SPI1;
 500:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 501:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 502:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 503:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 504:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 505:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 506:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 507:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 508:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 509:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 510:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 511:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 512:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 513:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 514:Core/Src/main.c ****   {
 515:Core/Src/main.c ****     Error_Handler();
 516:Core/Src/main.c ****   }
 517:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** }
 522:Core/Src/main.c **** 
 523:Core/Src/main.c **** /**
 524:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 525:Core/Src/main.c ****   * @param None
 526:Core/Src/main.c ****   * @retval None
 527:Core/Src/main.c ****   */
 528:Core/Src/main.c **** static void MX_SPI2_Init(void)
 529:Core/Src/main.c **** {
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 538:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 539:Core/Src/main.c ****   hspi2.Instance = SPI2;
 540:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 541:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 542:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 543:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 544:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 545:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 546:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 11


 547:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 548:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 549:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 550:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 551:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 552:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 553:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 554:Core/Src/main.c ****   {
 555:Core/Src/main.c ****     Error_Handler();
 556:Core/Src/main.c ****   }
 557:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c **** }
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** /**
 564:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 565:Core/Src/main.c ****   * @param None
 566:Core/Src/main.c ****   * @retval None
 567:Core/Src/main.c ****   */
 568:Core/Src/main.c **** static void MX_TIM3_Init(void)
 569:Core/Src/main.c **** {
 570:Core/Src/main.c **** 
 571:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 576:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 581:Core/Src/main.c ****   htim3.Instance = TIM3;
 582:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 583:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 584:Core/Src/main.c ****   htim3.Init.Period = 65535;
 585:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 586:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 587:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 588:Core/Src/main.c ****   {
 589:Core/Src/main.c ****     Error_Handler();
 590:Core/Src/main.c ****   }
 591:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 592:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 593:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 594:Core/Src/main.c ****   {
 595:Core/Src/main.c ****     Error_Handler();
 596:Core/Src/main.c ****   }
 597:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 598:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 599:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 600:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 601:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 602:Core/Src/main.c ****   {
 603:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 12


 604:Core/Src/main.c ****   }
 605:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 608:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 609:Core/Src/main.c **** 
 610:Core/Src/main.c **** }
 611:Core/Src/main.c **** 
 612:Core/Src/main.c **** /**
 613:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 614:Core/Src/main.c ****   * @param None
 615:Core/Src/main.c ****   * @retval None
 616:Core/Src/main.c ****   */
 617:Core/Src/main.c **** static void MX_TIM16_Init(void)
 618:Core/Src/main.c **** {
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 625:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 626:Core/Src/main.c **** 
 627:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 628:Core/Src/main.c **** 
 629:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 630:Core/Src/main.c ****   htim16.Instance = TIM16;
 631:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 632:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 633:Core/Src/main.c ****   htim16.Init.Period = 65535;
 634:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 635:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 636:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 637:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 638:Core/Src/main.c ****   {
 639:Core/Src/main.c ****     Error_Handler();
 640:Core/Src/main.c ****   }
 641:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim16) != HAL_OK)
 642:Core/Src/main.c ****   {
 643:Core/Src/main.c ****     Error_Handler();
 644:Core/Src/main.c ****   }
 645:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 646:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 647:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 648:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 649:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 650:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 651:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 652:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 653:Core/Src/main.c ****   {
 654:Core/Src/main.c ****     Error_Handler();
 655:Core/Src/main.c ****   }
 656:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 657:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 658:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 659:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 660:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 13


 661:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 662:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 663:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 664:Core/Src/main.c ****   {
 665:Core/Src/main.c ****     Error_Handler();
 666:Core/Src/main.c ****   }
 667:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 668:Core/Src/main.c **** 
 669:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 670:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim16);
 671:Core/Src/main.c **** 
 672:Core/Src/main.c **** }
 673:Core/Src/main.c **** 
 674:Core/Src/main.c **** /**
 675:Core/Src/main.c ****   * @brief USART1 Initialization Function
 676:Core/Src/main.c ****   * @param None
 677:Core/Src/main.c ****   * @retval None
 678:Core/Src/main.c ****   */
 679:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 680:Core/Src/main.c **** {
 681:Core/Src/main.c **** 
 682:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 689:Core/Src/main.c ****   huart1.Instance = USART1;
 690:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 691:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 692:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 693:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 694:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 695:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 696:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 697:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 698:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 699:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 700:Core/Src/main.c ****   {
 701:Core/Src/main.c ****     Error_Handler();
 702:Core/Src/main.c ****   }
 703:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 706:Core/Src/main.c **** 
 707:Core/Src/main.c **** }
 708:Core/Src/main.c **** 
 709:Core/Src/main.c **** /**
 710:Core/Src/main.c ****   * @brief USART2 Initialization Function
 711:Core/Src/main.c ****   * @param None
 712:Core/Src/main.c ****   * @retval None
 713:Core/Src/main.c ****   */
 714:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 715:Core/Src/main.c **** {
 716:Core/Src/main.c **** 
 717:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 14


 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 724:Core/Src/main.c ****   huart2.Instance = USART2;
 725:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 726:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 727:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 728:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 729:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 730:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 731:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 732:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 733:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 734:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 735:Core/Src/main.c ****   {
 736:Core/Src/main.c ****     Error_Handler();
 737:Core/Src/main.c ****   }
 738:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 739:Core/Src/main.c **** 
 740:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 741:Core/Src/main.c **** 
 742:Core/Src/main.c **** }
 743:Core/Src/main.c **** 
 744:Core/Src/main.c **** /**
 745:Core/Src/main.c ****   * @brief GPIO Initialization Function
 746:Core/Src/main.c ****   * @param None
 747:Core/Src/main.c ****   * @retval None
 748:Core/Src/main.c ****   */
 749:Core/Src/main.c **** static void MX_GPIO_Init(void)
 750:Core/Src/main.c **** {
  26              		.loc 1 750 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 D646     		mov	lr, r10
  38 0004 4F46     		mov	r7, r9
  39 0006 4646     		mov	r6, r8
  40 0008 C0B5     		push	{r6, r7, lr}
  41              		.cfi_def_cfa_offset 32
  42              		.cfi_offset 8, -32
  43              		.cfi_offset 9, -28
  44              		.cfi_offset 10, -24
  45 000a 8AB0     		sub	sp, sp, #40
  46              		.cfi_def_cfa_offset 72
 751:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 751 3 view .LVU1
  48              		.loc 1 751 20 is_stmt 0 view .LVU2
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 15


  49 000c 1422     		movs	r2, #20
  50 000e 0021     		movs	r1, #0
  51 0010 05A8     		add	r0, sp, #20
  52 0012 FFF7FEFF 		bl	memset
  53              	.LVL0:
 752:Core/Src/main.c **** 
 753:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 754:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  54              		.loc 1 754 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 754 3 view .LVU4
  57              		.loc 1 754 3 view .LVU5
  58 0016 3E4B     		ldr	r3, .L2
  59 0018 5A69     		ldr	r2, [r3, #20]
  60 001a 8021     		movs	r1, #128
  61 001c 0903     		lsls	r1, r1, #12
  62 001e 0A43     		orrs	r2, r1
  63 0020 5A61     		str	r2, [r3, #20]
  64              		.loc 1 754 3 view .LVU6
  65 0022 5A69     		ldr	r2, [r3, #20]
  66 0024 0A40     		ands	r2, r1
  67 0026 0192     		str	r2, [sp, #4]
  68              		.loc 1 754 3 view .LVU7
  69 0028 019A     		ldr	r2, [sp, #4]
  70              	.LBE4:
  71              		.loc 1 754 3 view .LVU8
 755:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  72              		.loc 1 755 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 755 3 view .LVU10
  75              		.loc 1 755 3 view .LVU11
  76 002a 5A69     		ldr	r2, [r3, #20]
  77 002c 8021     		movs	r1, #128
  78 002e C903     		lsls	r1, r1, #15
  79 0030 0A43     		orrs	r2, r1
  80 0032 5A61     		str	r2, [r3, #20]
  81              		.loc 1 755 3 view .LVU12
  82 0034 5A69     		ldr	r2, [r3, #20]
  83 0036 0A40     		ands	r2, r1
  84 0038 0292     		str	r2, [sp, #8]
  85              		.loc 1 755 3 view .LVU13
  86 003a 029A     		ldr	r2, [sp, #8]
  87              	.LBE5:
  88              		.loc 1 755 3 view .LVU14
 756:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  89              		.loc 1 756 3 view .LVU15
  90              	.LBB6:
  91              		.loc 1 756 3 view .LVU16
  92              		.loc 1 756 3 view .LVU17
  93 003c 5A69     		ldr	r2, [r3, #20]
  94 003e 8021     		movs	r1, #128
  95 0040 8902     		lsls	r1, r1, #10
  96 0042 0A43     		orrs	r2, r1
  97 0044 5A61     		str	r2, [r3, #20]
  98              		.loc 1 756 3 view .LVU18
  99 0046 5A69     		ldr	r2, [r3, #20]
 100 0048 0A40     		ands	r2, r1
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 16


 101 004a 0392     		str	r2, [sp, #12]
 102              		.loc 1 756 3 view .LVU19
 103 004c 039A     		ldr	r2, [sp, #12]
 104              	.LBE6:
 105              		.loc 1 756 3 view .LVU20
 757:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 106              		.loc 1 757 3 view .LVU21
 107              	.LBB7:
 108              		.loc 1 757 3 view .LVU22
 109              		.loc 1 757 3 view .LVU23
 110 004e 5A69     		ldr	r2, [r3, #20]
 111 0050 8021     		movs	r1, #128
 112 0052 C902     		lsls	r1, r1, #11
 113 0054 0A43     		orrs	r2, r1
 114 0056 5A61     		str	r2, [r3, #20]
 115              		.loc 1 757 3 view .LVU24
 116 0058 5B69     		ldr	r3, [r3, #20]
 117 005a 0B40     		ands	r3, r1
 118 005c 0493     		str	r3, [sp, #16]
 119              		.loc 1 757 3 view .LVU25
 120 005e 049B     		ldr	r3, [sp, #16]
 121              	.LBE7:
 122              		.loc 1 757 3 view .LVU26
 758:Core/Src/main.c **** 
 759:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 760:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, RE_485_Pin|DE_485_Pin, GPIO_PIN_RESET);
 123              		.loc 1 760 3 view .LVU27
 124 0060 C026     		movs	r6, #192
 125 0062 3602     		lsls	r6, r6, #8
 126 0064 2B4B     		ldr	r3, .L2+4
 127 0066 9846     		mov	r8, r3
 128 0068 0022     		movs	r2, #0
 129 006a 3100     		movs	r1, r6
 130 006c 1800     		movs	r0, r3
 131 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL1:
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 763:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LCD_CS_Pin|GPIO_PIN_14|SSR_B_Pin, GPIO_PIN_RESET);
 133              		.loc 1 763 3 view .LVU28
 134 0072 294B     		ldr	r3, .L2+8
 135 0074 9A46     		mov	r10, r3
 136 0076 294F     		ldr	r7, .L2+12
 137 0078 0022     		movs	r2, #0
 138 007a 1900     		movs	r1, r3
 139 007c 3800     		movs	r0, r7
 140 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL2:
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 766:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, CS_B_Pin|CS_A_Pin|SSR_A_Pin, GPIO_PIN_RESET);
 142              		.loc 1 766 3 view .LVU29
 143 0082 8923     		movs	r3, #137
 144 0084 1B02     		lsls	r3, r3, #8
 145 0086 9946     		mov	r9, r3
 146 0088 9025     		movs	r5, #144
 147 008a ED05     		lsls	r5, r5, #23
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 17


 148 008c 0022     		movs	r2, #0
 149 008e 1900     		movs	r1, r3
 150 0090 2800     		movs	r0, r5
 151 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL3:
 767:Core/Src/main.c **** 
 768:Core/Src/main.c ****   /*Configure GPIO pin : ZeroCrossing_Pin */
 769:Core/Src/main.c ****   GPIO_InitStruct.Pin = ZeroCrossing_Pin;
 153              		.loc 1 769 3 view .LVU30
 154              		.loc 1 769 23 is_stmt 0 view .LVU31
 155 0096 8023     		movs	r3, #128
 156 0098 9B01     		lsls	r3, r3, #6
 157 009a 0593     		str	r3, [sp, #20]
 770:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 158              		.loc 1 770 3 is_stmt 1 view .LVU32
 159              		.loc 1 770 24 is_stmt 0 view .LVU33
 160 009c 0024     		movs	r4, #0
 161 009e 0694     		str	r4, [sp, #24]
 771:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 162              		.loc 1 771 3 is_stmt 1 view .LVU34
 163              		.loc 1 771 24 is_stmt 0 view .LVU35
 164 00a0 0794     		str	r4, [sp, #28]
 772:Core/Src/main.c ****   HAL_GPIO_Init(ZeroCrossing_GPIO_Port, &GPIO_InitStruct);
 165              		.loc 1 772 3 is_stmt 1 view .LVU36
 166 00a2 05A9     		add	r1, sp, #20
 167 00a4 4046     		mov	r0, r8
 168 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 169              	.LVL4:
 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****   /*Configure GPIO pins : RE_485_Pin DE_485_Pin */
 775:Core/Src/main.c ****   GPIO_InitStruct.Pin = RE_485_Pin|DE_485_Pin;
 170              		.loc 1 775 3 view .LVU37
 171              		.loc 1 775 23 is_stmt 0 view .LVU38
 172 00aa 0596     		str	r6, [sp, #20]
 776:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 173              		.loc 1 776 3 is_stmt 1 view .LVU39
 174              		.loc 1 776 24 is_stmt 0 view .LVU40
 175 00ac 0126     		movs	r6, #1
 176 00ae 0696     		str	r6, [sp, #24]
 777:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 177              		.loc 1 777 3 is_stmt 1 view .LVU41
 178              		.loc 1 777 24 is_stmt 0 view .LVU42
 179 00b0 0794     		str	r4, [sp, #28]
 778:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 180              		.loc 1 778 3 is_stmt 1 view .LVU43
 181              		.loc 1 778 25 is_stmt 0 view .LVU44
 182 00b2 0894     		str	r4, [sp, #32]
 779:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 183              		.loc 1 779 3 is_stmt 1 view .LVU45
 184 00b4 05A9     		add	r1, sp, #20
 185 00b6 4046     		mov	r0, r8
 186 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL5:
 780:Core/Src/main.c **** 
 781:Core/Src/main.c ****   /*Configure GPIO pins : OK_BTN_Pin RT_BTN_Pin LT_BTN_Pin DWN_BTN_Pin */
 782:Core/Src/main.c ****   GPIO_InitStruct.Pin = OK_BTN_Pin|RT_BTN_Pin|LT_BTN_Pin|DWN_BTN_Pin;
 188              		.loc 1 782 3 view .LVU46
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 18


 189              		.loc 1 782 23 is_stmt 0 view .LVU47
 190 00bc 184B     		ldr	r3, .L2+16
 191 00be 0593     		str	r3, [sp, #20]
 783:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 192              		.loc 1 783 3 is_stmt 1 view .LVU48
 193              		.loc 1 783 24 is_stmt 0 view .LVU49
 194 00c0 0694     		str	r4, [sp, #24]
 784:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 195              		.loc 1 784 3 is_stmt 1 view .LVU50
 196              		.loc 1 784 24 is_stmt 0 view .LVU51
 197 00c2 0794     		str	r4, [sp, #28]
 785:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 198              		.loc 1 785 3 is_stmt 1 view .LVU52
 199 00c4 05A9     		add	r1, sp, #20
 200 00c6 3800     		movs	r0, r7
 201 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL6:
 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****   /*Configure GPIO pins : LCD_CS_Pin PB14 SSR_B_Pin */
 788:Core/Src/main.c ****   GPIO_InitStruct.Pin = LCD_CS_Pin|GPIO_PIN_14|SSR_B_Pin;
 203              		.loc 1 788 3 view .LVU53
 204              		.loc 1 788 23 is_stmt 0 view .LVU54
 205 00cc 5346     		mov	r3, r10
 206 00ce 0593     		str	r3, [sp, #20]
 789:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 207              		.loc 1 789 3 is_stmt 1 view .LVU55
 208              		.loc 1 789 24 is_stmt 0 view .LVU56
 209 00d0 0696     		str	r6, [sp, #24]
 790:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 210              		.loc 1 790 3 is_stmt 1 view .LVU57
 211              		.loc 1 790 24 is_stmt 0 view .LVU58
 212 00d2 0794     		str	r4, [sp, #28]
 791:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 213              		.loc 1 791 3 is_stmt 1 view .LVU59
 214              		.loc 1 791 25 is_stmt 0 view .LVU60
 215 00d4 0894     		str	r4, [sp, #32]
 792:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 216              		.loc 1 792 3 is_stmt 1 view .LVU61
 217 00d6 05A9     		add	r1, sp, #20
 218 00d8 3800     		movs	r0, r7
 219 00da FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL7:
 793:Core/Src/main.c **** 
 794:Core/Src/main.c ****   /*Configure GPIO pins : CS_B_Pin CS_A_Pin SSR_A_Pin */
 795:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_B_Pin|CS_A_Pin|SSR_A_Pin;
 221              		.loc 1 795 3 view .LVU62
 222              		.loc 1 795 23 is_stmt 0 view .LVU63
 223 00de 4B46     		mov	r3, r9
 224 00e0 0593     		str	r3, [sp, #20]
 796:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 225              		.loc 1 796 3 is_stmt 1 view .LVU64
 226              		.loc 1 796 24 is_stmt 0 view .LVU65
 227 00e2 0696     		str	r6, [sp, #24]
 797:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 228              		.loc 1 797 3 is_stmt 1 view .LVU66
 229              		.loc 1 797 24 is_stmt 0 view .LVU67
 230 00e4 0794     		str	r4, [sp, #28]
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 19


 798:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 231              		.loc 1 798 3 is_stmt 1 view .LVU68
 232              		.loc 1 798 25 is_stmt 0 view .LVU69
 233 00e6 0894     		str	r4, [sp, #32]
 799:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 234              		.loc 1 799 3 is_stmt 1 view .LVU70
 235 00e8 05A9     		add	r1, sp, #20
 236 00ea 2800     		movs	r0, r5
 237 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 238              	.LVL8:
 800:Core/Src/main.c **** 
 801:Core/Src/main.c ****   /*Configure GPIO pin : UP_BTN_Pin */
 802:Core/Src/main.c ****   GPIO_InitStruct.Pin = UP_BTN_Pin;
 239              		.loc 1 802 3 view .LVU71
 240              		.loc 1 802 23 is_stmt 0 view .LVU72
 241 00f0 8023     		movs	r3, #128
 242 00f2 5B01     		lsls	r3, r3, #5
 243 00f4 0593     		str	r3, [sp, #20]
 803:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 244              		.loc 1 803 3 is_stmt 1 view .LVU73
 245              		.loc 1 803 24 is_stmt 0 view .LVU74
 246 00f6 0694     		str	r4, [sp, #24]
 804:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 247              		.loc 1 804 3 is_stmt 1 view .LVU75
 248              		.loc 1 804 24 is_stmt 0 view .LVU76
 249 00f8 0794     		str	r4, [sp, #28]
 805:Core/Src/main.c ****   HAL_GPIO_Init(UP_BTN_GPIO_Port, &GPIO_InitStruct);
 250              		.loc 1 805 3 is_stmt 1 view .LVU77
 251 00fa 05A9     		add	r1, sp, #20
 252 00fc 2800     		movs	r0, r5
 253 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 254              	.LVL9:
 806:Core/Src/main.c **** 
 807:Core/Src/main.c **** }
 255              		.loc 1 807 1 is_stmt 0 view .LVU78
 256 0102 0AB0     		add	sp, sp, #40
 257              		@ sp needed
 258 0104 E0BC     		pop	{r5, r6, r7}
 259 0106 BA46     		mov	r10, r7
 260 0108 B146     		mov	r9, r6
 261 010a A846     		mov	r8, r5
 262 010c F0BD     		pop	{r4, r5, r6, r7, pc}
 263              	.L3:
 264 010e C046     		.align	2
 265              	.L2:
 266 0110 00100240 		.word	1073876992
 267 0114 00080048 		.word	1207961600
 268 0118 08500000 		.word	20488
 269 011c 00040048 		.word	1207960576
 270 0120 040E0000 		.word	3588
 271              		.cfi_endproc
 272              	.LFE54:
 274              		.global	__aeabi_fcmplt
 275              		.global	__aeabi_fmul
 276              		.global	__aeabi_f2iz
 277              		.global	__aeabi_idivmod
 278              		.global	__aeabi_uidivmod
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 20


 279              		.global	__aeabi_uidiv
 280              		.global	__aeabi_idiv
 281              		.section	.text.float_to_char,"ax",%progbits
 282              		.align	1
 283              		.global	float_to_char
 284              		.syntax unified
 285              		.code	16
 286              		.thumb_func
 288              	float_to_char:
 289              	.LVL10:
 290              	.LFB43:
  82:Core/Src/main.c ****     char *s = p + CHAR_BUFF_SIZE; // go to end of buffer
 291              		.loc 1 82 40 is_stmt 1 view -0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
  82:Core/Src/main.c ****     char *s = p + CHAR_BUFF_SIZE; // go to end of buffer
 295              		.loc 1 82 40 is_stmt 0 view .LVU80
 296 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 297              		.cfi_def_cfa_offset 24
 298              		.cfi_offset 3, -24
 299              		.cfi_offset 4, -20
 300              		.cfi_offset 5, -16
 301              		.cfi_offset 6, -12
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 071C     		adds	r7, r0, #0
 305 0004 0E00     		movs	r6, r1
  83:Core/Src/main.c ****     uint16_t decimals;  // variable to store the decimals
 306              		.loc 1 83 5 is_stmt 1 view .LVU81
 307              	.LVL11:
  84:Core/Src/main.c ****     int units;  // variable to store the units (part to left of decimal place)
 308              		.loc 1 84 5 view .LVU82
  85:Core/Src/main.c ****     if (x < 0) { // take care of negative numbers
 309              		.loc 1 85 5 view .LVU83
  86:Core/Src/main.c ****         decimals = (int)(x * -100) % 100; // make 1000 for 3 decimals etc.
 310              		.loc 1 86 5 view .LVU84
  86:Core/Src/main.c ****         decimals = (int)(x * -100) % 100; // make 1000 for 3 decimals etc.
 311              		.loc 1 86 8 is_stmt 0 view .LVU85
 312 0006 0021     		movs	r1, #0
 313              	.LVL12:
  86:Core/Src/main.c ****         decimals = (int)(x * -100) % 100; // make 1000 for 3 decimals etc.
 314              		.loc 1 86 8 view .LVU86
 315 0008 FFF7FEFF 		bl	__aeabi_fcmplt
 316              	.LVL13:
  86:Core/Src/main.c ****         decimals = (int)(x * -100) % 100; // make 1000 for 3 decimals etc.
 317              		.loc 1 86 8 view .LVU87
 318 000c 0028     		cmp	r0, #0
 319 000e 21D1     		bne	.L15
  90:Core/Src/main.c ****         units = (int)x;
 320              		.loc 1 90 9 is_stmt 1 view .LVU88
  90:Core/Src/main.c ****         units = (int)x;
 321              		.loc 1 90 28 is_stmt 0 view .LVU89
 322 0010 2649     		ldr	r1, .L17
 323 0012 381C     		adds	r0, r7, #0
 324 0014 FFF7FEFF 		bl	__aeabi_fmul
 325              	.LVL14:
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 21


  90:Core/Src/main.c ****         units = (int)x;
 326              		.loc 1 90 20 view .LVU90
 327 0018 FFF7FEFF 		bl	__aeabi_f2iz
 328              	.LVL15:
  90:Core/Src/main.c ****         units = (int)x;
 329              		.loc 1 90 35 view .LVU91
 330 001c 6421     		movs	r1, #100
 331 001e FFF7FEFF 		bl	__aeabi_idivmod
 332              	.LVL16:
  90:Core/Src/main.c ****         units = (int)x;
 333              		.loc 1 90 18 view .LVU92
 334 0022 8DB2     		uxth	r5, r1
 335              	.LVL17:
  91:Core/Src/main.c ****     }
 336              		.loc 1 91 9 is_stmt 1 view .LVU93
  91:Core/Src/main.c ****     }
 337              		.loc 1 91 15 is_stmt 0 view .LVU94
 338 0024 381C     		adds	r0, r7, #0
 339 0026 FFF7FEFF 		bl	__aeabi_f2iz
 340              	.LVL18:
 341 002a 0400     		movs	r4, r0
 342              	.LVL19:
 343              	.L7:
  94:Core/Src/main.c ****     decimals /= 10; // repeat for as many decimal places as you need
 344              		.loc 1 94 5 is_stmt 1 view .LVU95
  94:Core/Src/main.c ****     decimals /= 10; // repeat for as many decimal places as you need
 345              		.loc 1 94 28 is_stmt 0 view .LVU96
 346 002c 0A21     		movs	r1, #10
 347 002e 2800     		movs	r0, r5
 348              	.LVL20:
  94:Core/Src/main.c ****     decimals /= 10; // repeat for as many decimal places as you need
 349              		.loc 1 94 28 view .LVU97
 350 0030 FFF7FEFF 		bl	__aeabi_uidivmod
 351              	.LVL21:
 352 0034 3031     		adds	r1, r1, #48
  94:Core/Src/main.c ****     decimals /= 10; // repeat for as many decimal places as you need
 353              		.loc 1 94 10 view .LVU98
 354 0036 7171     		strb	r1, [r6, #5]
  95:Core/Src/main.c ****     *--s = (decimals % 10) + '0';
 355              		.loc 1 95 5 is_stmt 1 view .LVU99
  95:Core/Src/main.c ****     *--s = (decimals % 10) + '0';
 356              		.loc 1 95 14 is_stmt 0 view .LVU100
 357 0038 0A21     		movs	r1, #10
 358 003a 2800     		movs	r0, r5
 359 003c FFF7FEFF 		bl	__aeabi_uidiv
 360              	.LVL22:
 361 0040 80B2     		uxth	r0, r0
 362              	.LVL23:
  96:Core/Src/main.c ****     *--s = '.';
 363              		.loc 1 96 5 is_stmt 1 view .LVU101
  96:Core/Src/main.c ****     *--s = '.';
 364              		.loc 1 96 28 is_stmt 0 view .LVU102
 365 0042 0A21     		movs	r1, #10
 366 0044 FFF7FEFF 		bl	__aeabi_uidivmod
 367              	.LVL24:
  96:Core/Src/main.c ****     *--s = '.';
 368              		.loc 1 96 28 view .LVU103
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 22


 369 0048 3031     		adds	r1, r1, #48
  96:Core/Src/main.c ****     *--s = '.';
 370              		.loc 1 96 10 view .LVU104
 371 004a 3171     		strb	r1, [r6, #4]
  97:Core/Src/main.c **** 
 372              		.loc 1 97 5 is_stmt 1 view .LVU105
  97:Core/Src/main.c **** 
 373              		.loc 1 97 10 is_stmt 0 view .LVU106
 374 004c F51C     		adds	r5, r6, #3
 375              	.LVL25:
  97:Core/Src/main.c **** 
 376              		.loc 1 97 10 view .LVU107
 377 004e 2E23     		movs	r3, #46
 378 0050 F370     		strb	r3, [r6, #3]
  99:Core/Src/main.c ****         *--s = (units % 10) + '0';
 379              		.loc 1 99 5 is_stmt 1 view .LVU108
  99:Core/Src/main.c ****         *--s = (units % 10) + '0';
 380              		.loc 1 99 11 is_stmt 0 view .LVU109
 381 0052 1CE0     		b	.L8
 382              	.LVL26:
 383              	.L15:
  87:Core/Src/main.c ****         units = (int)(-1 * x);
 384              		.loc 1 87 9 is_stmt 1 view .LVU110
  87:Core/Src/main.c ****         units = (int)(-1 * x);
 385              		.loc 1 87 28 is_stmt 0 view .LVU111
 386 0054 1649     		ldr	r1, .L17+4
 387 0056 381C     		adds	r0, r7, #0
 388 0058 FFF7FEFF 		bl	__aeabi_fmul
 389              	.LVL27:
  87:Core/Src/main.c ****         units = (int)(-1 * x);
 390              		.loc 1 87 20 view .LVU112
 391 005c FFF7FEFF 		bl	__aeabi_f2iz
 392              	.LVL28:
  87:Core/Src/main.c ****         units = (int)(-1 * x);
 393              		.loc 1 87 36 view .LVU113
 394 0060 6421     		movs	r1, #100
 395 0062 FFF7FEFF 		bl	__aeabi_idivmod
 396              	.LVL29:
  87:Core/Src/main.c ****         units = (int)(-1 * x);
 397              		.loc 1 87 18 view .LVU114
 398 0066 8DB2     		uxth	r5, r1
 399              	.LVL30:
  88:Core/Src/main.c ****     } else { // positive numbers
 400              		.loc 1 88 9 is_stmt 1 view .LVU115
  88:Core/Src/main.c ****     } else { // positive numbers
 401              		.loc 1 88 26 is_stmt 0 view .LVU116
 402 0068 8023     		movs	r3, #128
 403 006a 1B06     		lsls	r3, r3, #24
 404 006c F818     		adds	r0, r7, r3
  88:Core/Src/main.c ****     } else { // positive numbers
 405              		.loc 1 88 15 view .LVU117
 406 006e FFF7FEFF 		bl	__aeabi_f2iz
 407              	.LVL31:
 408 0072 0400     		movs	r4, r0
 409              	.LVL32:
  88:Core/Src/main.c ****     } else { // positive numbers
 410              		.loc 1 88 15 view .LVU118
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 23


 411 0074 DAE7     		b	.L7
 412              	.LVL33:
 413              	.L9:
 100:Core/Src/main.c ****         units /= 10;
 414              		.loc 1 100 9 is_stmt 1 view .LVU119
 100:Core/Src/main.c ****         units /= 10;
 415              		.loc 1 100 23 is_stmt 0 view .LVU120
 416 0076 0A21     		movs	r1, #10
 417 0078 2000     		movs	r0, r4
 418 007a FFF7FEFF 		bl	__aeabi_idivmod
 419              	.LVL34:
 100:Core/Src/main.c ****         units /= 10;
 420              		.loc 1 100 14 view .LVU121
 421 007e 013D     		subs	r5, r5, #1
 422              	.LVL35:
 100:Core/Src/main.c ****         units /= 10;
 423              		.loc 1 100 29 view .LVU122
 424 0080 3031     		adds	r1, r1, #48
 100:Core/Src/main.c ****         units /= 10;
 425              		.loc 1 100 14 view .LVU123
 426 0082 2970     		strb	r1, [r5]
 101:Core/Src/main.c ****     }
 427              		.loc 1 101 9 is_stmt 1 view .LVU124
 101:Core/Src/main.c ****     }
 428              		.loc 1 101 15 is_stmt 0 view .LVU125
 429 0084 0A21     		movs	r1, #10
 430 0086 2000     		movs	r0, r4
 431 0088 FFF7FEFF 		bl	__aeabi_idiv
 432              	.LVL36:
 433 008c 0400     		movs	r4, r0
 434              	.LVL37:
 435              	.L8:
  99:Core/Src/main.c ****         *--s = (units % 10) + '0';
 436              		.loc 1 99 18 is_stmt 1 view .LVU126
 437 008e 002C     		cmp	r4, #0
 438 0090 F1DC     		bgt	.L9
 103:Core/Src/main.c ****     return s;
 439              		.loc 1 103 5 view .LVU127
 103:Core/Src/main.c ****     return s;
 440              		.loc 1 103 8 is_stmt 0 view .LVU128
 441 0092 0021     		movs	r1, #0
 442 0094 381C     		adds	r0, r7, #0
 443 0096 FFF7FEFF 		bl	__aeabi_fcmplt
 444              	.LVL38:
 445 009a 0028     		cmp	r0, #0
 446 009c 01D1     		bne	.L16
 447              	.LVL39:
 448              	.L4:
 105:Core/Src/main.c **** 
 449              		.loc 1 105 1 view .LVU129
 450 009e 2800     		movs	r0, r5
 451              		@ sp needed
 452              	.LVL40:
 453              	.LVL41:
 454              	.LVL42:
 105:Core/Src/main.c **** 
 455              		.loc 1 105 1 view .LVU130
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 24


 456 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 457              	.LVL43:
 458              	.L16:
 103:Core/Src/main.c ****     return s;
 459              		.loc 1 103 16 is_stmt 1 discriminator 1 view .LVU131
 103:Core/Src/main.c ****     return s;
 460              		.loc 1 103 21 is_stmt 0 discriminator 1 view .LVU132
 461 00a2 013D     		subs	r5, r5, #1
 462              	.LVL44:
 103:Core/Src/main.c ****     return s;
 463              		.loc 1 103 21 discriminator 1 view .LVU133
 464 00a4 2D23     		movs	r3, #45
 465 00a6 2B70     		strb	r3, [r5]
 104:Core/Src/main.c **** }
 466              		.loc 1 104 5 is_stmt 1 discriminator 1 view .LVU134
 104:Core/Src/main.c **** }
 467              		.loc 1 104 12 is_stmt 0 discriminator 1 view .LVU135
 468 00a8 F9E7     		b	.L4
 469              	.L18:
 470 00aa C046     		.align	2
 471              	.L17:
 472 00ac 0000C842 		.word	1120403456
 473 00b0 0000C8C2 		.word	-1027080192
 474              		.cfi_endproc
 475              	.LFE43:
 477              		.section	.text.Error_Handler,"ax",%progbits
 478              		.align	1
 479              		.global	Error_Handler
 480              		.syntax unified
 481              		.code	16
 482              		.thumb_func
 484              	Error_Handler:
 485              	.LFB55:
 808:Core/Src/main.c **** 
 809:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 810:Core/Src/main.c **** 
 811:Core/Src/main.c **** /* USER CODE END 4 */
 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** /**
 814:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 815:Core/Src/main.c ****   * @retval None
 816:Core/Src/main.c ****   */
 817:Core/Src/main.c **** void Error_Handler(void)
 818:Core/Src/main.c **** {
 486              		.loc 1 818 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ Volatile: function does not return.
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 819:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 820:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 821:Core/Src/main.c ****   __disable_irq();
 492              		.loc 1 821 3 view .LVU137
 493              	.LBB8:
 494              	.LBI8:
 495              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 25


   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 26


  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 27


 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 496              		.loc 2 140 27 view .LVU138
 497              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 498              		.loc 2 142 3 view .LVU139
 499              		.syntax divided
 500              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 501 0000 72B6     		cpsid i
 502              	@ 0 "" 2
 503              		.thumb
 504              		.syntax unified
 505              	.L20:
 506              	.LBE9:
 507              	.LBE8:
 822:Core/Src/main.c ****   while (1)
 508              		.loc 1 822 3 discriminator 1 view .LVU140
 823:Core/Src/main.c ****   {
 824:Core/Src/main.c ****   }
 509              		.loc 1 824 3 discriminator 1 view .LVU141
 822:Core/Src/main.c ****   while (1)
 510              		.loc 1 822 9 discriminator 1 view .LVU142
 511 0002 FEE7     		b	.L20
 512              		.cfi_endproc
 513              	.LFE55:
 515              		.section	.text.MX_I2C1_Init,"ax",%progbits
 516              		.align	1
 517              		.syntax unified
 518              		.code	16
 519              		.thumb_func
 521              	MX_I2C1_Init:
 522              	.LFB47:
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 28


 437:Core/Src/main.c **** 
 523              		.loc 1 437 1 view -0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 446:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00000102;
 531              		.loc 1 446 3 view .LVU144
 446:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00000102;
 532              		.loc 1 446 18 is_stmt 0 view .LVU145
 533 0002 1648     		ldr	r0, .L28
 534 0004 164B     		ldr	r3, .L28+4
 535 0006 0360     		str	r3, [r0]
 447:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 536              		.loc 1 447 3 is_stmt 1 view .LVU146
 447:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 537              		.loc 1 447 21 is_stmt 0 view .LVU147
 538 0008 8123     		movs	r3, #129
 539 000a 5B00     		lsls	r3, r3, #1
 540 000c 4360     		str	r3, [r0, #4]
 448:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 541              		.loc 1 448 3 is_stmt 1 view .LVU148
 448:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 542              		.loc 1 448 26 is_stmt 0 view .LVU149
 543 000e 0023     		movs	r3, #0
 544 0010 8360     		str	r3, [r0, #8]
 449:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 545              		.loc 1 449 3 is_stmt 1 view .LVU150
 449:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 546              		.loc 1 449 29 is_stmt 0 view .LVU151
 547 0012 0122     		movs	r2, #1
 548 0014 C260     		str	r2, [r0, #12]
 450:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 549              		.loc 1 450 3 is_stmt 1 view .LVU152
 450:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 550              		.loc 1 450 30 is_stmt 0 view .LVU153
 551 0016 0361     		str	r3, [r0, #16]
 451:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 552              		.loc 1 451 3 is_stmt 1 view .LVU154
 451:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 553              		.loc 1 451 26 is_stmt 0 view .LVU155
 554 0018 4361     		str	r3, [r0, #20]
 452:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 555              		.loc 1 452 3 is_stmt 1 view .LVU156
 452:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 556              		.loc 1 452 31 is_stmt 0 view .LVU157
 557 001a 8361     		str	r3, [r0, #24]
 453:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 558              		.loc 1 453 3 is_stmt 1 view .LVU158
 453:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 559              		.loc 1 453 30 is_stmt 0 view .LVU159
 560 001c C361     		str	r3, [r0, #28]
 454:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 561              		.loc 1 454 3 is_stmt 1 view .LVU160
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 29


 454:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 562              		.loc 1 454 28 is_stmt 0 view .LVU161
 563 001e 0362     		str	r3, [r0, #32]
 455:Core/Src/main.c ****   {
 564              		.loc 1 455 3 is_stmt 1 view .LVU162
 455:Core/Src/main.c ****   {
 565              		.loc 1 455 7 is_stmt 0 view .LVU163
 566 0020 FFF7FEFF 		bl	HAL_I2C_Init
 567              	.LVL45:
 455:Core/Src/main.c ****   {
 568              		.loc 1 455 6 view .LVU164
 569 0024 0028     		cmp	r0, #0
 570 0026 12D1     		bne	.L25
 462:Core/Src/main.c ****   {
 571              		.loc 1 462 3 is_stmt 1 view .LVU165
 462:Core/Src/main.c ****   {
 572              		.loc 1 462 7 is_stmt 0 view .LVU166
 573 0028 0C48     		ldr	r0, .L28
 574 002a 0021     		movs	r1, #0
 575 002c FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 576              	.LVL46:
 462:Core/Src/main.c ****   {
 577              		.loc 1 462 6 view .LVU167
 578 0030 0028     		cmp	r0, #0
 579 0032 0ED1     		bne	.L26
 469:Core/Src/main.c ****   {
 580              		.loc 1 469 3 is_stmt 1 view .LVU168
 469:Core/Src/main.c ****   {
 581              		.loc 1 469 7 is_stmt 0 view .LVU169
 582 0034 0948     		ldr	r0, .L28
 583 0036 0021     		movs	r1, #0
 584 0038 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 585              	.LVL47:
 469:Core/Src/main.c ****   {
 586              		.loc 1 469 6 view .LVU170
 587 003c 0028     		cmp	r0, #0
 588 003e 0AD1     		bne	.L27
 476:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 589              		.loc 1 476 3 is_stmt 1 view .LVU171
 476:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 590              		.loc 1 476 3 view .LVU172
 476:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 591              		.loc 1 476 3 view .LVU173
 592 0040 084A     		ldr	r2, .L28+8
 593 0042 1168     		ldr	r1, [r2]
 594 0044 8023     		movs	r3, #128
 595 0046 5B03     		lsls	r3, r3, #13
 596 0048 0B43     		orrs	r3, r1
 597 004a 1360     		str	r3, [r2]
 476:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 598              		.loc 1 476 3 view .LVU174
 481:Core/Src/main.c **** 
 599              		.loc 1 481 1 is_stmt 0 view .LVU175
 600              		@ sp needed
 601 004c 10BD     		pop	{r4, pc}
 602              	.L25:
 457:Core/Src/main.c ****   }
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 30


 603              		.loc 1 457 5 is_stmt 1 view .LVU176
 604 004e FFF7FEFF 		bl	Error_Handler
 605              	.LVL48:
 606              	.L26:
 464:Core/Src/main.c ****   }
 607              		.loc 1 464 5 view .LVU177
 608 0052 FFF7FEFF 		bl	Error_Handler
 609              	.LVL49:
 610              	.L27:
 471:Core/Src/main.c ****   }
 611              		.loc 1 471 5 view .LVU178
 612 0056 FFF7FEFF 		bl	Error_Handler
 613              	.LVL50:
 614              	.L29:
 615 005a C046     		.align	2
 616              	.L28:
 617 005c 00000000 		.word	hi2c1
 618 0060 00540040 		.word	1073763328
 619 0064 00000140 		.word	1073807360
 620              		.cfi_endproc
 621              	.LFE47:
 623              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 624              		.align	1
 625              		.syntax unified
 626              		.code	16
 627              		.thumb_func
 629              	MX_USART1_UART_Init:
 630              	.LFB52:
 680:Core/Src/main.c **** 
 631              		.loc 1 680 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635 0000 10B5     		push	{r4, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 4, -8
 638              		.cfi_offset 14, -4
 689:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 639              		.loc 1 689 3 view .LVU180
 689:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 640              		.loc 1 689 19 is_stmt 0 view .LVU181
 641 0002 0B48     		ldr	r0, .L33
 642 0004 0B4B     		ldr	r3, .L33+4
 643 0006 0360     		str	r3, [r0]
 690:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 644              		.loc 1 690 3 is_stmt 1 view .LVU182
 690:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 645              		.loc 1 690 24 is_stmt 0 view .LVU183
 646 0008 E123     		movs	r3, #225
 647 000a 5B02     		lsls	r3, r3, #9
 648 000c 4360     		str	r3, [r0, #4]
 691:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 649              		.loc 1 691 3 is_stmt 1 view .LVU184
 691:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 650              		.loc 1 691 26 is_stmt 0 view .LVU185
 651 000e 0023     		movs	r3, #0
 652 0010 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 31


 692:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 653              		.loc 1 692 3 is_stmt 1 view .LVU186
 692:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 654              		.loc 1 692 24 is_stmt 0 view .LVU187
 655 0012 C360     		str	r3, [r0, #12]
 693:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 656              		.loc 1 693 3 is_stmt 1 view .LVU188
 693:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 657              		.loc 1 693 22 is_stmt 0 view .LVU189
 658 0014 0361     		str	r3, [r0, #16]
 694:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 659              		.loc 1 694 3 is_stmt 1 view .LVU190
 694:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 660              		.loc 1 694 20 is_stmt 0 view .LVU191
 661 0016 0C22     		movs	r2, #12
 662 0018 4261     		str	r2, [r0, #20]
 695:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 663              		.loc 1 695 3 is_stmt 1 view .LVU192
 695:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 664              		.loc 1 695 25 is_stmt 0 view .LVU193
 665 001a 8361     		str	r3, [r0, #24]
 696:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 666              		.loc 1 696 3 is_stmt 1 view .LVU194
 696:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 667              		.loc 1 696 28 is_stmt 0 view .LVU195
 668 001c C361     		str	r3, [r0, #28]
 697:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 669              		.loc 1 697 3 is_stmt 1 view .LVU196
 697:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 670              		.loc 1 697 30 is_stmt 0 view .LVU197
 671 001e 0362     		str	r3, [r0, #32]
 698:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 672              		.loc 1 698 3 is_stmt 1 view .LVU198
 698:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 673              		.loc 1 698 38 is_stmt 0 view .LVU199
 674 0020 4362     		str	r3, [r0, #36]
 699:Core/Src/main.c ****   {
 675              		.loc 1 699 3 is_stmt 1 view .LVU200
 699:Core/Src/main.c ****   {
 676              		.loc 1 699 7 is_stmt 0 view .LVU201
 677 0022 FFF7FEFF 		bl	HAL_UART_Init
 678              	.LVL51:
 699:Core/Src/main.c ****   {
 679              		.loc 1 699 6 view .LVU202
 680 0026 0028     		cmp	r0, #0
 681 0028 00D1     		bne	.L32
 707:Core/Src/main.c **** 
 682              		.loc 1 707 1 view .LVU203
 683              		@ sp needed
 684 002a 10BD     		pop	{r4, pc}
 685              	.L32:
 701:Core/Src/main.c ****   }
 686              		.loc 1 701 5 is_stmt 1 view .LVU204
 687 002c FFF7FEFF 		bl	Error_Handler
 688              	.LVL52:
 689              	.L34:
 690              		.align	2
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 32


 691              	.L33:
 692 0030 00000000 		.word	huart1
 693 0034 00380140 		.word	1073821696
 694              		.cfi_endproc
 695              	.LFE52:
 697              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 698              		.align	1
 699              		.syntax unified
 700              		.code	16
 701              		.thumb_func
 703              	MX_USART2_UART_Init:
 704              	.LFB53:
 715:Core/Src/main.c **** 
 705              		.loc 1 715 1 view -0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 10B5     		push	{r4, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 4, -8
 712              		.cfi_offset 14, -4
 724:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 713              		.loc 1 724 3 view .LVU206
 724:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 714              		.loc 1 724 19 is_stmt 0 view .LVU207
 715 0002 0B48     		ldr	r0, .L38
 716 0004 0B4B     		ldr	r3, .L38+4
 717 0006 0360     		str	r3, [r0]
 725:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 718              		.loc 1 725 3 is_stmt 1 view .LVU208
 725:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 719              		.loc 1 725 24 is_stmt 0 view .LVU209
 720 0008 E123     		movs	r3, #225
 721 000a 5B02     		lsls	r3, r3, #9
 722 000c 4360     		str	r3, [r0, #4]
 726:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 723              		.loc 1 726 3 is_stmt 1 view .LVU210
 726:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 724              		.loc 1 726 26 is_stmt 0 view .LVU211
 725 000e 0023     		movs	r3, #0
 726 0010 8360     		str	r3, [r0, #8]
 727:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 727              		.loc 1 727 3 is_stmt 1 view .LVU212
 727:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 728              		.loc 1 727 24 is_stmt 0 view .LVU213
 729 0012 C360     		str	r3, [r0, #12]
 728:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 730              		.loc 1 728 3 is_stmt 1 view .LVU214
 728:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 731              		.loc 1 728 22 is_stmt 0 view .LVU215
 732 0014 0361     		str	r3, [r0, #16]
 729:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 733              		.loc 1 729 3 is_stmt 1 view .LVU216
 729:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 734              		.loc 1 729 20 is_stmt 0 view .LVU217
 735 0016 0C22     		movs	r2, #12
 736 0018 4261     		str	r2, [r0, #20]
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 33


 730:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 737              		.loc 1 730 3 is_stmt 1 view .LVU218
 730:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 738              		.loc 1 730 25 is_stmt 0 view .LVU219
 739 001a 8361     		str	r3, [r0, #24]
 731:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 740              		.loc 1 731 3 is_stmt 1 view .LVU220
 731:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 741              		.loc 1 731 28 is_stmt 0 view .LVU221
 742 001c C361     		str	r3, [r0, #28]
 732:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 743              		.loc 1 732 3 is_stmt 1 view .LVU222
 732:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 744              		.loc 1 732 30 is_stmt 0 view .LVU223
 745 001e 0362     		str	r3, [r0, #32]
 733:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 746              		.loc 1 733 3 is_stmt 1 view .LVU224
 733:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 747              		.loc 1 733 38 is_stmt 0 view .LVU225
 748 0020 4362     		str	r3, [r0, #36]
 734:Core/Src/main.c ****   {
 749              		.loc 1 734 3 is_stmt 1 view .LVU226
 734:Core/Src/main.c ****   {
 750              		.loc 1 734 7 is_stmt 0 view .LVU227
 751 0022 FFF7FEFF 		bl	HAL_UART_Init
 752              	.LVL53:
 734:Core/Src/main.c ****   {
 753              		.loc 1 734 6 view .LVU228
 754 0026 0028     		cmp	r0, #0
 755 0028 00D1     		bne	.L37
 742:Core/Src/main.c **** 
 756              		.loc 1 742 1 view .LVU229
 757              		@ sp needed
 758 002a 10BD     		pop	{r4, pc}
 759              	.L37:
 736:Core/Src/main.c ****   }
 760              		.loc 1 736 5 is_stmt 1 view .LVU230
 761 002c FFF7FEFF 		bl	Error_Handler
 762              	.LVL54:
 763              	.L39:
 764              		.align	2
 765              	.L38:
 766 0030 00000000 		.word	huart2
 767 0034 00440040 		.word	1073759232
 768              		.cfi_endproc
 769              	.LFE53:
 771              		.section	.text.MX_ADC_Init,"ax",%progbits
 772              		.align	1
 773              		.syntax unified
 774              		.code	16
 775              		.thumb_func
 777              	MX_ADC_Init:
 778              	.LFB46:
 343:Core/Src/main.c **** 
 779              		.loc 1 343 1 view -0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 34


 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783 0000 00B5     		push	{lr}
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 14, -4
 786 0002 85B0     		sub	sp, sp, #20
 787              		.cfi_def_cfa_offset 24
 349:Core/Src/main.c **** 
 788              		.loc 1 349 3 view .LVU232
 349:Core/Src/main.c **** 
 789              		.loc 1 349 26 is_stmt 0 view .LVU233
 790 0004 0C22     		movs	r2, #12
 791 0006 0021     		movs	r1, #0
 792 0008 01A8     		add	r0, sp, #4
 793 000a FFF7FEFF 		bl	memset
 794              	.LVL55:
 357:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 795              		.loc 1 357 3 is_stmt 1 view .LVU234
 357:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 796              		.loc 1 357 17 is_stmt 0 view .LVU235
 797 000e 3048     		ldr	r0, .L55
 798 0010 304B     		ldr	r3, .L55+4
 799 0012 0360     		str	r3, [r0]
 358:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 800              		.loc 1 358 3 is_stmt 1 view .LVU236
 358:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 801              		.loc 1 358 28 is_stmt 0 view .LVU237
 802 0014 0023     		movs	r3, #0
 803 0016 4360     		str	r3, [r0, #4]
 359:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 804              		.loc 1 359 3 is_stmt 1 view .LVU238
 359:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 805              		.loc 1 359 24 is_stmt 0 view .LVU239
 806 0018 8360     		str	r3, [r0, #8]
 360:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 807              		.loc 1 360 3 is_stmt 1 view .LVU240
 360:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 808              		.loc 1 360 23 is_stmt 0 view .LVU241
 809 001a C360     		str	r3, [r0, #12]
 361:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 810              		.loc 1 361 3 is_stmt 1 view .LVU242
 361:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 811              		.loc 1 361 26 is_stmt 0 view .LVU243
 812 001c 0122     		movs	r2, #1
 813 001e 0261     		str	r2, [r0, #16]
 362:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 814              		.loc 1 362 3 is_stmt 1 view .LVU244
 362:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 815              		.loc 1 362 26 is_stmt 0 view .LVU245
 816 0020 0421     		movs	r1, #4
 817 0022 4161     		str	r1, [r0, #20]
 363:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 818              		.loc 1 363 3 is_stmt 1 view .LVU246
 363:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 819              		.loc 1 363 30 is_stmt 0 view .LVU247
 820 0024 0376     		strb	r3, [r0, #24]
 364:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 821              		.loc 1 364 3 is_stmt 1 view .LVU248
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 35


 364:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 822              		.loc 1 364 34 is_stmt 0 view .LVU249
 823 0026 4376     		strb	r3, [r0, #25]
 365:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 824              		.loc 1 365 3 is_stmt 1 view .LVU250
 365:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 825              		.loc 1 365 32 is_stmt 0 view .LVU251
 826 0028 8376     		strb	r3, [r0, #26]
 366:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 827              		.loc 1 366 3 is_stmt 1 view .LVU252
 366:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 828              		.loc 1 366 35 is_stmt 0 view .LVU253
 829 002a C376     		strb	r3, [r0, #27]
 367:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 830              		.loc 1 367 3 is_stmt 1 view .LVU254
 367:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 831              		.loc 1 367 30 is_stmt 0 view .LVU255
 832 002c C221     		movs	r1, #194
 833 002e FF31     		adds	r1, r1, #255
 834 0030 C161     		str	r1, [r0, #28]
 368:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 835              		.loc 1 368 3 is_stmt 1 view .LVU256
 368:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 836              		.loc 1 368 34 is_stmt 0 view .LVU257
 837 0032 0362     		str	r3, [r0, #32]
 369:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 838              		.loc 1 369 3 is_stmt 1 view .LVU258
 369:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 839              		.loc 1 369 35 is_stmt 0 view .LVU259
 840 0034 9E39     		subs	r1, r1, #158
 841 0036 FF39     		subs	r1, r1, #255
 842 0038 4354     		strb	r3, [r0, r1]
 370:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 843              		.loc 1 370 3 is_stmt 1 view .LVU260
 370:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 844              		.loc 1 370 21 is_stmt 0 view .LVU261
 845 003a 8262     		str	r2, [r0, #40]
 371:Core/Src/main.c ****   {
 846              		.loc 1 371 3 is_stmt 1 view .LVU262
 371:Core/Src/main.c ****   {
 847              		.loc 1 371 7 is_stmt 0 view .LVU263
 848 003c FFF7FEFF 		bl	HAL_ADC_Init
 849              	.LVL56:
 371:Core/Src/main.c ****   {
 850              		.loc 1 371 6 view .LVU264
 851 0040 0028     		cmp	r0, #0
 852 0042 37D1     		bne	.L48
 378:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 853              		.loc 1 378 3 is_stmt 1 view .LVU265
 378:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 854              		.loc 1 378 19 is_stmt 0 view .LVU266
 855 0044 0023     		movs	r3, #0
 856 0046 0193     		str	r3, [sp, #4]
 379:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 857              		.loc 1 379 3 is_stmt 1 view .LVU267
 379:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 858              		.loc 1 379 16 is_stmt 0 view .LVU268
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 36


 859 0048 8023     		movs	r3, #128
 860 004a 5B01     		lsls	r3, r3, #5
 861 004c 0293     		str	r3, [sp, #8]
 380:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 862              		.loc 1 380 3 is_stmt 1 view .LVU269
 380:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 863              		.loc 1 380 24 is_stmt 0 view .LVU270
 864 004e 8023     		movs	r3, #128
 865 0050 5B05     		lsls	r3, r3, #21
 866 0052 0393     		str	r3, [sp, #12]
 381:Core/Src/main.c ****   {
 867              		.loc 1 381 3 is_stmt 1 view .LVU271
 381:Core/Src/main.c ****   {
 868              		.loc 1 381 7 is_stmt 0 view .LVU272
 869 0054 1E48     		ldr	r0, .L55
 870 0056 01A9     		add	r1, sp, #4
 871 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 872              	.LVL57:
 381:Core/Src/main.c ****   {
 873              		.loc 1 381 6 view .LVU273
 874 005c 0028     		cmp	r0, #0
 875 005e 2BD1     		bne	.L49
 388:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 876              		.loc 1 388 3 is_stmt 1 view .LVU274
 388:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 877              		.loc 1 388 19 is_stmt 0 view .LVU275
 878 0060 0123     		movs	r3, #1
 879 0062 0193     		str	r3, [sp, #4]
 389:Core/Src/main.c ****   {
 880              		.loc 1 389 3 is_stmt 1 view .LVU276
 389:Core/Src/main.c ****   {
 881              		.loc 1 389 7 is_stmt 0 view .LVU277
 882 0064 1A48     		ldr	r0, .L55
 883 0066 01A9     		add	r1, sp, #4
 884 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 885              	.LVL58:
 389:Core/Src/main.c ****   {
 886              		.loc 1 389 6 view .LVU278
 887 006c 0028     		cmp	r0, #0
 888 006e 25D1     		bne	.L50
 396:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 889              		.loc 1 396 3 is_stmt 1 view .LVU279
 396:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 890              		.loc 1 396 19 is_stmt 0 view .LVU280
 891 0070 0423     		movs	r3, #4
 892 0072 0193     		str	r3, [sp, #4]
 397:Core/Src/main.c ****   {
 893              		.loc 1 397 3 is_stmt 1 view .LVU281
 397:Core/Src/main.c ****   {
 894              		.loc 1 397 7 is_stmt 0 view .LVU282
 895 0074 1648     		ldr	r0, .L55
 896 0076 01A9     		add	r1, sp, #4
 897 0078 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 898              	.LVL59:
 397:Core/Src/main.c ****   {
 899              		.loc 1 397 6 view .LVU283
 900 007c 0028     		cmp	r0, #0
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 37


 901 007e 1FD1     		bne	.L51
 404:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 902              		.loc 1 404 3 is_stmt 1 view .LVU284
 404:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 903              		.loc 1 404 19 is_stmt 0 view .LVU285
 904 0080 0623     		movs	r3, #6
 905 0082 0193     		str	r3, [sp, #4]
 405:Core/Src/main.c ****   {
 906              		.loc 1 405 3 is_stmt 1 view .LVU286
 405:Core/Src/main.c ****   {
 907              		.loc 1 405 7 is_stmt 0 view .LVU287
 908 0084 1248     		ldr	r0, .L55
 909 0086 01A9     		add	r1, sp, #4
 910 0088 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 911              	.LVL60:
 405:Core/Src/main.c ****   {
 912              		.loc 1 405 6 view .LVU288
 913 008c 0028     		cmp	r0, #0
 914 008e 19D1     		bne	.L52
 412:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 915              		.loc 1 412 3 is_stmt 1 view .LVU289
 412:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 916              		.loc 1 412 19 is_stmt 0 view .LVU290
 917 0090 0823     		movs	r3, #8
 918 0092 0193     		str	r3, [sp, #4]
 413:Core/Src/main.c ****   {
 919              		.loc 1 413 3 is_stmt 1 view .LVU291
 413:Core/Src/main.c ****   {
 920              		.loc 1 413 7 is_stmt 0 view .LVU292
 921 0094 0E48     		ldr	r0, .L55
 922 0096 01A9     		add	r1, sp, #4
 923 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 924              	.LVL61:
 413:Core/Src/main.c ****   {
 925              		.loc 1 413 6 view .LVU293
 926 009c 0028     		cmp	r0, #0
 927 009e 13D1     		bne	.L53
 420:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 928              		.loc 1 420 3 is_stmt 1 view .LVU294
 420:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 929              		.loc 1 420 19 is_stmt 0 view .LVU295
 930 00a0 0923     		movs	r3, #9
 931 00a2 0193     		str	r3, [sp, #4]
 421:Core/Src/main.c ****   {
 932              		.loc 1 421 3 is_stmt 1 view .LVU296
 421:Core/Src/main.c ****   {
 933              		.loc 1 421 7 is_stmt 0 view .LVU297
 934 00a4 0A48     		ldr	r0, .L55
 935 00a6 01A9     		add	r1, sp, #4
 936 00a8 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 937              	.LVL62:
 421:Core/Src/main.c ****   {
 938              		.loc 1 421 6 view .LVU298
 939 00ac 0028     		cmp	r0, #0
 940 00ae 0DD1     		bne	.L54
 429:Core/Src/main.c **** 
 941              		.loc 1 429 1 view .LVU299
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 38


 942 00b0 05B0     		add	sp, sp, #20
 943              		@ sp needed
 944 00b2 00BD     		pop	{pc}
 945              	.L48:
 373:Core/Src/main.c ****   }
 946              		.loc 1 373 5 is_stmt 1 view .LVU300
 947 00b4 FFF7FEFF 		bl	Error_Handler
 948              	.LVL63:
 949              	.L49:
 383:Core/Src/main.c ****   }
 950              		.loc 1 383 5 view .LVU301
 951 00b8 FFF7FEFF 		bl	Error_Handler
 952              	.LVL64:
 953              	.L50:
 391:Core/Src/main.c ****   }
 954              		.loc 1 391 5 view .LVU302
 955 00bc FFF7FEFF 		bl	Error_Handler
 956              	.LVL65:
 957              	.L51:
 399:Core/Src/main.c ****   }
 958              		.loc 1 399 5 view .LVU303
 959 00c0 FFF7FEFF 		bl	Error_Handler
 960              	.LVL66:
 961              	.L52:
 407:Core/Src/main.c ****   }
 962              		.loc 1 407 5 view .LVU304
 963 00c4 FFF7FEFF 		bl	Error_Handler
 964              	.LVL67:
 965              	.L53:
 415:Core/Src/main.c ****   }
 966              		.loc 1 415 5 view .LVU305
 967 00c8 FFF7FEFF 		bl	Error_Handler
 968              	.LVL68:
 969              	.L54:
 423:Core/Src/main.c ****   }
 970              		.loc 1 423 5 view .LVU306
 971 00cc FFF7FEFF 		bl	Error_Handler
 972              	.LVL69:
 973              	.L56:
 974              		.align	2
 975              	.L55:
 976 00d0 00000000 		.word	hadc
 977 00d4 00240140 		.word	1073816576
 978              		.cfi_endproc
 979              	.LFE46:
 981              		.section	.text.MX_SPI1_Init,"ax",%progbits
 982              		.align	1
 983              		.syntax unified
 984              		.code	16
 985              		.thumb_func
 987              	MX_SPI1_Init:
 988              	.LFB48:
 489:Core/Src/main.c **** 
 989              		.loc 1 489 1 view -0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 39


 993 0000 10B5     		push	{r4, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 4, -8
 996              		.cfi_offset 14, -4
 499:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 997              		.loc 1 499 3 view .LVU308
 499:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 998              		.loc 1 499 18 is_stmt 0 view .LVU309
 999 0002 1148     		ldr	r0, .L60
 1000 0004 114B     		ldr	r3, .L60+4
 1001 0006 0360     		str	r3, [r0]
 500:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1002              		.loc 1 500 3 is_stmt 1 view .LVU310
 500:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1003              		.loc 1 500 19 is_stmt 0 view .LVU311
 1004 0008 8223     		movs	r3, #130
 1005 000a 5B00     		lsls	r3, r3, #1
 1006 000c 4360     		str	r3, [r0, #4]
 501:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 1007              		.loc 1 501 3 is_stmt 1 view .LVU312
 501:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_16BIT;
 1008              		.loc 1 501 24 is_stmt 0 view .LVU313
 1009 000e 0023     		movs	r3, #0
 1010 0010 8360     		str	r3, [r0, #8]
 502:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1011              		.loc 1 502 3 is_stmt 1 view .LVU314
 502:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1012              		.loc 1 502 23 is_stmt 0 view .LVU315
 1013 0012 F022     		movs	r2, #240
 1014 0014 1201     		lsls	r2, r2, #4
 1015 0016 C260     		str	r2, [r0, #12]
 503:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1016              		.loc 1 503 3 is_stmt 1 view .LVU316
 503:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1017              		.loc 1 503 26 is_stmt 0 view .LVU317
 1018 0018 0361     		str	r3, [r0, #16]
 504:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1019              		.loc 1 504 3 is_stmt 1 view .LVU318
 504:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1020              		.loc 1 504 23 is_stmt 0 view .LVU319
 1021 001a 4361     		str	r3, [r0, #20]
 505:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 1022              		.loc 1 505 3 is_stmt 1 view .LVU320
 505:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 1023              		.loc 1 505 18 is_stmt 0 view .LVU321
 1024 001c 8022     		movs	r2, #128
 1025 001e 9200     		lsls	r2, r2, #2
 1026 0020 8261     		str	r2, [r0, #24]
 506:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1027              		.loc 1 506 3 is_stmt 1 view .LVU322
 506:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1028              		.loc 1 506 32 is_stmt 0 view .LVU323
 1029 0022 F13A     		subs	r2, r2, #241
 1030 0024 FF3A     		subs	r2, r2, #255
 1031 0026 C261     		str	r2, [r0, #28]
 507:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1032              		.loc 1 507 3 is_stmt 1 view .LVU324
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 40


 507:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1033              		.loc 1 507 23 is_stmt 0 view .LVU325
 1034 0028 0362     		str	r3, [r0, #32]
 508:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1035              		.loc 1 508 3 is_stmt 1 view .LVU326
 508:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1036              		.loc 1 508 21 is_stmt 0 view .LVU327
 1037 002a 4362     		str	r3, [r0, #36]
 509:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 1038              		.loc 1 509 3 is_stmt 1 view .LVU328
 509:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 1039              		.loc 1 509 29 is_stmt 0 view .LVU329
 1040 002c 8362     		str	r3, [r0, #40]
 510:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1041              		.loc 1 510 3 is_stmt 1 view .LVU330
 510:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1042              		.loc 1 510 28 is_stmt 0 view .LVU331
 1043 002e 093A     		subs	r2, r2, #9
 1044 0030 C262     		str	r2, [r0, #44]
 511:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1045              		.loc 1 511 3 is_stmt 1 view .LVU332
 511:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1046              		.loc 1 511 24 is_stmt 0 view .LVU333
 1047 0032 0363     		str	r3, [r0, #48]
 512:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1048              		.loc 1 512 3 is_stmt 1 view .LVU334
 512:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1049              		.loc 1 512 23 is_stmt 0 view .LVU335
 1050 0034 0833     		adds	r3, r3, #8
 1051 0036 4363     		str	r3, [r0, #52]
 513:Core/Src/main.c ****   {
 1052              		.loc 1 513 3 is_stmt 1 view .LVU336
 513:Core/Src/main.c ****   {
 1053              		.loc 1 513 7 is_stmt 0 view .LVU337
 1054 0038 FFF7FEFF 		bl	HAL_SPI_Init
 1055              	.LVL70:
 513:Core/Src/main.c ****   {
 1056              		.loc 1 513 6 view .LVU338
 1057 003c 0028     		cmp	r0, #0
 1058 003e 00D1     		bne	.L59
 521:Core/Src/main.c **** 
 1059              		.loc 1 521 1 view .LVU339
 1060              		@ sp needed
 1061 0040 10BD     		pop	{r4, pc}
 1062              	.L59:
 515:Core/Src/main.c ****   }
 1063              		.loc 1 515 5 is_stmt 1 view .LVU340
 1064 0042 FFF7FEFF 		bl	Error_Handler
 1065              	.LVL71:
 1066              	.L61:
 1067 0046 C046     		.align	2
 1068              	.L60:
 1069 0048 00000000 		.word	hspi1
 1070 004c 00300140 		.word	1073819648
 1071              		.cfi_endproc
 1072              	.LFE48:
 1074              		.section	.text.MX_SPI2_Init,"ax",%progbits
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 41


 1075              		.align	1
 1076              		.syntax unified
 1077              		.code	16
 1078              		.thumb_func
 1080              	MX_SPI2_Init:
 1081              	.LFB49:
 529:Core/Src/main.c **** 
 1082              		.loc 1 529 1 view -0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086 0000 10B5     		push	{r4, lr}
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 4, -8
 1089              		.cfi_offset 14, -4
 539:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1090              		.loc 1 539 3 view .LVU342
 539:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1091              		.loc 1 539 18 is_stmt 0 view .LVU343
 1092 0002 1148     		ldr	r0, .L65
 1093 0004 114B     		ldr	r3, .L65+4
 1094 0006 0360     		str	r3, [r0]
 540:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 1095              		.loc 1 540 3 is_stmt 1 view .LVU344
 540:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 1096              		.loc 1 540 19 is_stmt 0 view .LVU345
 1097 0008 8223     		movs	r3, #130
 1098 000a 5B00     		lsls	r3, r3, #1
 1099 000c 4360     		str	r3, [r0, #4]
 541:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 1100              		.loc 1 541 3 is_stmt 1 view .LVU346
 541:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 1101              		.loc 1 541 24 is_stmt 0 view .LVU347
 1102 000e 8023     		movs	r3, #128
 1103 0010 1B02     		lsls	r3, r3, #8
 1104 0012 8360     		str	r3, [r0, #8]
 542:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1105              		.loc 1 542 3 is_stmt 1 view .LVU348
 542:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1106              		.loc 1 542 23 is_stmt 0 view .LVU349
 1107 0014 C023     		movs	r3, #192
 1108 0016 9B00     		lsls	r3, r3, #2
 1109 0018 C360     		str	r3, [r0, #12]
 543:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1110              		.loc 1 543 3 is_stmt 1 view .LVU350
 543:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1111              		.loc 1 543 26 is_stmt 0 view .LVU351
 1112 001a 0023     		movs	r3, #0
 1113 001c 0361     		str	r3, [r0, #16]
 544:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1114              		.loc 1 544 3 is_stmt 1 view .LVU352
 544:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1115              		.loc 1 544 23 is_stmt 0 view .LVU353
 1116 001e 4361     		str	r3, [r0, #20]
 545:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1117              		.loc 1 545 3 is_stmt 1 view .LVU354
 545:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 42


 1118              		.loc 1 545 18 is_stmt 0 view .LVU355
 1119 0020 8022     		movs	r2, #128
 1120 0022 9200     		lsls	r2, r2, #2
 1121 0024 8261     		str	r2, [r0, #24]
 546:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1122              		.loc 1 546 3 is_stmt 1 view .LVU356
 546:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1123              		.loc 1 546 32 is_stmt 0 view .LVU357
 1124 0026 C361     		str	r3, [r0, #28]
 547:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1125              		.loc 1 547 3 is_stmt 1 view .LVU358
 547:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1126              		.loc 1 547 23 is_stmt 0 view .LVU359
 1127 0028 0362     		str	r3, [r0, #32]
 548:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1128              		.loc 1 548 3 is_stmt 1 view .LVU360
 548:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1129              		.loc 1 548 21 is_stmt 0 view .LVU361
 1130 002a 4362     		str	r3, [r0, #36]
 549:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 1131              		.loc 1 549 3 is_stmt 1 view .LVU362
 549:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 1132              		.loc 1 549 29 is_stmt 0 view .LVU363
 1133 002c 8362     		str	r3, [r0, #40]
 550:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1134              		.loc 1 550 3 is_stmt 1 view .LVU364
 550:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 1135              		.loc 1 550 28 is_stmt 0 view .LVU365
 1136 002e FA3A     		subs	r2, r2, #250
 1137 0030 FF3A     		subs	r2, r2, #255
 1138 0032 C262     		str	r2, [r0, #44]
 551:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1139              		.loc 1 551 3 is_stmt 1 view .LVU366
 551:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1140              		.loc 1 551 24 is_stmt 0 view .LVU367
 1141 0034 0363     		str	r3, [r0, #48]
 552:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1142              		.loc 1 552 3 is_stmt 1 view .LVU368
 552:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1143              		.loc 1 552 23 is_stmt 0 view .LVU369
 1144 0036 0833     		adds	r3, r3, #8
 1145 0038 4363     		str	r3, [r0, #52]
 553:Core/Src/main.c ****   {
 1146              		.loc 1 553 3 is_stmt 1 view .LVU370
 553:Core/Src/main.c ****   {
 1147              		.loc 1 553 7 is_stmt 0 view .LVU371
 1148 003a FFF7FEFF 		bl	HAL_SPI_Init
 1149              	.LVL72:
 553:Core/Src/main.c ****   {
 1150              		.loc 1 553 6 view .LVU372
 1151 003e 0028     		cmp	r0, #0
 1152 0040 00D1     		bne	.L64
 561:Core/Src/main.c **** 
 1153              		.loc 1 561 1 view .LVU373
 1154              		@ sp needed
 1155 0042 10BD     		pop	{r4, pc}
 1156              	.L64:
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 43


 555:Core/Src/main.c ****   }
 1157              		.loc 1 555 5 is_stmt 1 view .LVU374
 1158 0044 FFF7FEFF 		bl	Error_Handler
 1159              	.LVL73:
 1160              	.L66:
 1161              		.align	2
 1162              	.L65:
 1163 0048 00000000 		.word	hspi2
 1164 004c 00380040 		.word	1073756160
 1165              		.cfi_endproc
 1166              	.LFE49:
 1168              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1169              		.align	1
 1170              		.syntax unified
 1171              		.code	16
 1172              		.thumb_func
 1174              	MX_TIM3_Init:
 1175              	.LFB50:
 569:Core/Src/main.c **** 
 1176              		.loc 1 569 1 view -0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 40
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180 0000 00B5     		push	{lr}
 1181              		.cfi_def_cfa_offset 4
 1182              		.cfi_offset 14, -4
 1183 0002 8BB0     		sub	sp, sp, #44
 1184              		.cfi_def_cfa_offset 48
 575:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1185              		.loc 1 575 3 view .LVU376
 575:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1186              		.loc 1 575 27 is_stmt 0 view .LVU377
 1187 0004 0822     		movs	r2, #8
 1188 0006 0021     		movs	r1, #0
 1189 0008 08A8     		add	r0, sp, #32
 1190 000a FFF7FEFF 		bl	memset
 1191              	.LVL74:
 576:Core/Src/main.c **** 
 1192              		.loc 1 576 3 is_stmt 1 view .LVU378
 576:Core/Src/main.c **** 
 1193              		.loc 1 576 22 is_stmt 0 view .LVU379
 1194 000e 1C22     		movs	r2, #28
 1195 0010 0021     		movs	r1, #0
 1196 0012 01A8     		add	r0, sp, #4
 1197 0014 FFF7FEFF 		bl	memset
 1198              	.LVL75:
 581:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1199              		.loc 1 581 3 is_stmt 1 view .LVU380
 581:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1200              		.loc 1 581 18 is_stmt 0 view .LVU381
 1201 0018 1748     		ldr	r0, .L74
 1202 001a 184B     		ldr	r3, .L74+4
 1203 001c 0360     		str	r3, [r0]
 582:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1204              		.loc 1 582 3 is_stmt 1 view .LVU382
 582:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1205              		.loc 1 582 24 is_stmt 0 view .LVU383
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 44


 1206 001e 0023     		movs	r3, #0
 1207 0020 4360     		str	r3, [r0, #4]
 583:Core/Src/main.c ****   htim3.Init.Period = 65535;
 1208              		.loc 1 583 3 is_stmt 1 view .LVU384
 583:Core/Src/main.c ****   htim3.Init.Period = 65535;
 1209              		.loc 1 583 26 is_stmt 0 view .LVU385
 1210 0022 8360     		str	r3, [r0, #8]
 584:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1211              		.loc 1 584 3 is_stmt 1 view .LVU386
 584:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1212              		.loc 1 584 21 is_stmt 0 view .LVU387
 1213 0024 164A     		ldr	r2, .L74+8
 1214 0026 C260     		str	r2, [r0, #12]
 585:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1215              		.loc 1 585 3 is_stmt 1 view .LVU388
 585:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1216              		.loc 1 585 28 is_stmt 0 view .LVU389
 1217 0028 0361     		str	r3, [r0, #16]
 586:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1218              		.loc 1 586 3 is_stmt 1 view .LVU390
 586:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1219              		.loc 1 586 32 is_stmt 0 view .LVU391
 1220 002a 8361     		str	r3, [r0, #24]
 587:Core/Src/main.c ****   {
 1221              		.loc 1 587 3 is_stmt 1 view .LVU392
 587:Core/Src/main.c ****   {
 1222              		.loc 1 587 7 is_stmt 0 view .LVU393
 1223 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1224              	.LVL76:
 587:Core/Src/main.c ****   {
 1225              		.loc 1 587 6 view .LVU394
 1226 0030 0028     		cmp	r0, #0
 1227 0032 1AD1     		bne	.L71
 591:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1228              		.loc 1 591 3 is_stmt 1 view .LVU395
 591:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1229              		.loc 1 591 37 is_stmt 0 view .LVU396
 1230 0034 0023     		movs	r3, #0
 1231 0036 0893     		str	r3, [sp, #32]
 592:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1232              		.loc 1 592 3 is_stmt 1 view .LVU397
 592:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1233              		.loc 1 592 33 is_stmt 0 view .LVU398
 1234 0038 0993     		str	r3, [sp, #36]
 593:Core/Src/main.c ****   {
 1235              		.loc 1 593 3 is_stmt 1 view .LVU399
 593:Core/Src/main.c ****   {
 1236              		.loc 1 593 7 is_stmt 0 view .LVU400
 1237 003a 0F48     		ldr	r0, .L74
 1238 003c 08A9     		add	r1, sp, #32
 1239 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1240              	.LVL77:
 593:Core/Src/main.c ****   {
 1241              		.loc 1 593 6 view .LVU401
 1242 0042 0028     		cmp	r0, #0
 1243 0044 13D1     		bne	.L72
 597:Core/Src/main.c ****   sConfigOC.Pulse = 0;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 45


 1244              		.loc 1 597 3 is_stmt 1 view .LVU402
 597:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1245              		.loc 1 597 20 is_stmt 0 view .LVU403
 1246 0046 6023     		movs	r3, #96
 1247 0048 0193     		str	r3, [sp, #4]
 598:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1248              		.loc 1 598 3 is_stmt 1 view .LVU404
 598:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1249              		.loc 1 598 19 is_stmt 0 view .LVU405
 1250 004a 0023     		movs	r3, #0
 1251 004c 0293     		str	r3, [sp, #8]
 599:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1252              		.loc 1 599 3 is_stmt 1 view .LVU406
 599:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1253              		.loc 1 599 24 is_stmt 0 view .LVU407
 1254 004e 0393     		str	r3, [sp, #12]
 600:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1255              		.loc 1 600 3 is_stmt 1 view .LVU408
 600:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 1256              		.loc 1 600 24 is_stmt 0 view .LVU409
 1257 0050 0593     		str	r3, [sp, #20]
 601:Core/Src/main.c ****   {
 1258              		.loc 1 601 3 is_stmt 1 view .LVU410
 601:Core/Src/main.c ****   {
 1259              		.loc 1 601 7 is_stmt 0 view .LVU411
 1260 0052 0948     		ldr	r0, .L74
 1261 0054 0422     		movs	r2, #4
 1262 0056 01A9     		add	r1, sp, #4
 1263 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1264              	.LVL78:
 601:Core/Src/main.c ****   {
 1265              		.loc 1 601 6 view .LVU412
 1266 005c 0028     		cmp	r0, #0
 1267 005e 08D1     		bne	.L73
 608:Core/Src/main.c **** 
 1268              		.loc 1 608 3 is_stmt 1 view .LVU413
 1269 0060 0548     		ldr	r0, .L74
 1270 0062 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1271              	.LVL79:
 610:Core/Src/main.c **** 
 1272              		.loc 1 610 1 is_stmt 0 view .LVU414
 1273 0066 0BB0     		add	sp, sp, #44
 1274              		@ sp needed
 1275 0068 00BD     		pop	{pc}
 1276              	.L71:
 589:Core/Src/main.c ****   }
 1277              		.loc 1 589 5 is_stmt 1 view .LVU415
 1278 006a FFF7FEFF 		bl	Error_Handler
 1279              	.LVL80:
 1280              	.L72:
 595:Core/Src/main.c ****   }
 1281              		.loc 1 595 5 view .LVU416
 1282 006e FFF7FEFF 		bl	Error_Handler
 1283              	.LVL81:
 1284              	.L73:
 603:Core/Src/main.c ****   }
 1285              		.loc 1 603 5 view .LVU417
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 46


 1286 0072 FFF7FEFF 		bl	Error_Handler
 1287              	.LVL82:
 1288              	.L75:
 1289 0076 C046     		.align	2
 1290              	.L74:
 1291 0078 00000000 		.word	htim3
 1292 007c 00040040 		.word	1073742848
 1293 0080 FFFF0000 		.word	65535
 1294              		.cfi_endproc
 1295              	.LFE50:
 1297              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1298              		.align	1
 1299              		.syntax unified
 1300              		.code	16
 1301              		.thumb_func
 1303              	MX_TIM16_Init:
 1304              	.LFB51:
 618:Core/Src/main.c **** 
 1305              		.loc 1 618 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 64
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309 0000 00B5     		push	{lr}
 1310              		.cfi_def_cfa_offset 4
 1311              		.cfi_offset 14, -4
 1312 0002 91B0     		sub	sp, sp, #68
 1313              		.cfi_def_cfa_offset 72
 624:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1314              		.loc 1 624 3 view .LVU419
 624:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1315              		.loc 1 624 22 is_stmt 0 view .LVU420
 1316 0004 1C22     		movs	r2, #28
 1317 0006 0021     		movs	r1, #0
 1318 0008 09A8     		add	r0, sp, #36
 1319 000a FFF7FEFF 		bl	memset
 1320              	.LVL83:
 625:Core/Src/main.c **** 
 1321              		.loc 1 625 3 is_stmt 1 view .LVU421
 625:Core/Src/main.c **** 
 1322              		.loc 1 625 34 is_stmt 0 view .LVU422
 1323 000e 2022     		movs	r2, #32
 1324 0010 0021     		movs	r1, #0
 1325 0012 01A8     		add	r0, sp, #4
 1326 0014 FFF7FEFF 		bl	memset
 1327              	.LVL84:
 630:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 1328              		.loc 1 630 3 is_stmt 1 view .LVU423
 630:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 1329              		.loc 1 630 19 is_stmt 0 view .LVU424
 1330 0018 2048     		ldr	r0, .L85
 1331 001a 214B     		ldr	r3, .L85+4
 1332 001c 0360     		str	r3, [r0]
 631:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1333              		.loc 1 631 3 is_stmt 1 view .LVU425
 631:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 1334              		.loc 1 631 25 is_stmt 0 view .LVU426
 1335 001e 0023     		movs	r3, #0
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 47


 1336 0020 4360     		str	r3, [r0, #4]
 632:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1337              		.loc 1 632 3 is_stmt 1 view .LVU427
 632:Core/Src/main.c ****   htim16.Init.Period = 65535;
 1338              		.loc 1 632 27 is_stmt 0 view .LVU428
 1339 0022 8360     		str	r3, [r0, #8]
 633:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1340              		.loc 1 633 3 is_stmt 1 view .LVU429
 633:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1341              		.loc 1 633 22 is_stmt 0 view .LVU430
 1342 0024 1F4A     		ldr	r2, .L85+8
 1343 0026 C260     		str	r2, [r0, #12]
 634:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1344              		.loc 1 634 3 is_stmt 1 view .LVU431
 634:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 1345              		.loc 1 634 29 is_stmt 0 view .LVU432
 1346 0028 0361     		str	r3, [r0, #16]
 635:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1347              		.loc 1 635 3 is_stmt 1 view .LVU433
 635:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1348              		.loc 1 635 33 is_stmt 0 view .LVU434
 1349 002a 4361     		str	r3, [r0, #20]
 636:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1350              		.loc 1 636 3 is_stmt 1 view .LVU435
 636:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 1351              		.loc 1 636 33 is_stmt 0 view .LVU436
 1352 002c 8361     		str	r3, [r0, #24]
 637:Core/Src/main.c ****   {
 1353              		.loc 1 637 3 is_stmt 1 view .LVU437
 637:Core/Src/main.c ****   {
 1354              		.loc 1 637 7 is_stmt 0 view .LVU438
 1355 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 1356              	.LVL85:
 637:Core/Src/main.c ****   {
 1357              		.loc 1 637 6 view .LVU439
 1358 0032 0028     		cmp	r0, #0
 1359 0034 29D1     		bne	.L81
 641:Core/Src/main.c ****   {
 1360              		.loc 1 641 3 is_stmt 1 view .LVU440
 641:Core/Src/main.c ****   {
 1361              		.loc 1 641 7 is_stmt 0 view .LVU441
 1362 0036 1948     		ldr	r0, .L85
 1363 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1364              	.LVL86:
 641:Core/Src/main.c ****   {
 1365              		.loc 1 641 6 view .LVU442
 1366 003c 0028     		cmp	r0, #0
 1367 003e 26D1     		bne	.L82
 645:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1368              		.loc 1 645 3 is_stmt 1 view .LVU443
 645:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1369              		.loc 1 645 20 is_stmt 0 view .LVU444
 1370 0040 6023     		movs	r3, #96
 1371 0042 0993     		str	r3, [sp, #36]
 646:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1372              		.loc 1 646 3 is_stmt 1 view .LVU445
 646:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 48


 1373              		.loc 1 646 19 is_stmt 0 view .LVU446
 1374 0044 0023     		movs	r3, #0
 1375 0046 0A93     		str	r3, [sp, #40]
 647:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1376              		.loc 1 647 3 is_stmt 1 view .LVU447
 647:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1377              		.loc 1 647 24 is_stmt 0 view .LVU448
 1378 0048 0B93     		str	r3, [sp, #44]
 648:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1379              		.loc 1 648 3 is_stmt 1 view .LVU449
 648:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1380              		.loc 1 648 25 is_stmt 0 view .LVU450
 1381 004a 0C93     		str	r3, [sp, #48]
 649:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1382              		.loc 1 649 3 is_stmt 1 view .LVU451
 649:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1383              		.loc 1 649 24 is_stmt 0 view .LVU452
 1384 004c 0D93     		str	r3, [sp, #52]
 650:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1385              		.loc 1 650 3 is_stmt 1 view .LVU453
 650:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1386              		.loc 1 650 25 is_stmt 0 view .LVU454
 1387 004e 0E93     		str	r3, [sp, #56]
 651:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1388              		.loc 1 651 3 is_stmt 1 view .LVU455
 651:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1389              		.loc 1 651 26 is_stmt 0 view .LVU456
 1390 0050 0F93     		str	r3, [sp, #60]
 652:Core/Src/main.c ****   {
 1391              		.loc 1 652 3 is_stmt 1 view .LVU457
 652:Core/Src/main.c ****   {
 1392              		.loc 1 652 7 is_stmt 0 view .LVU458
 1393 0052 1248     		ldr	r0, .L85
 1394 0054 0022     		movs	r2, #0
 1395 0056 09A9     		add	r1, sp, #36
 1396 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1397              	.LVL87:
 652:Core/Src/main.c ****   {
 1398              		.loc 1 652 6 view .LVU459
 1399 005c 0028     		cmp	r0, #0
 1400 005e 18D1     		bne	.L83
 656:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1401              		.loc 1 656 3 is_stmt 1 view .LVU460
 656:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1402              		.loc 1 656 40 is_stmt 0 view .LVU461
 1403 0060 0023     		movs	r3, #0
 1404 0062 0193     		str	r3, [sp, #4]
 657:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1405              		.loc 1 657 3 is_stmt 1 view .LVU462
 657:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1406              		.loc 1 657 41 is_stmt 0 view .LVU463
 1407 0064 0293     		str	r3, [sp, #8]
 658:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1408              		.loc 1 658 3 is_stmt 1 view .LVU464
 658:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1409              		.loc 1 658 34 is_stmt 0 view .LVU465
 1410 0066 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 49


 659:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1411              		.loc 1 659 3 is_stmt 1 view .LVU466
 659:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1412              		.loc 1 659 33 is_stmt 0 view .LVU467
 1413 0068 0493     		str	r3, [sp, #16]
 660:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1414              		.loc 1 660 3 is_stmt 1 view .LVU468
 660:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1415              		.loc 1 660 35 is_stmt 0 view .LVU469
 1416 006a 0593     		str	r3, [sp, #20]
 661:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1417              		.loc 1 661 3 is_stmt 1 view .LVU470
 661:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1418              		.loc 1 661 38 is_stmt 0 view .LVU471
 1419 006c 8022     		movs	r2, #128
 1420 006e 9201     		lsls	r2, r2, #6
 1421 0070 0692     		str	r2, [sp, #24]
 662:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 1422              		.loc 1 662 3 is_stmt 1 view .LVU472
 662:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 1423              		.loc 1 662 40 is_stmt 0 view .LVU473
 1424 0072 0893     		str	r3, [sp, #32]
 663:Core/Src/main.c ****   {
 1425              		.loc 1 663 3 is_stmt 1 view .LVU474
 663:Core/Src/main.c ****   {
 1426              		.loc 1 663 7 is_stmt 0 view .LVU475
 1427 0074 0948     		ldr	r0, .L85
 1428 0076 01A9     		add	r1, sp, #4
 1429 0078 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1430              	.LVL88:
 663:Core/Src/main.c ****   {
 1431              		.loc 1 663 6 view .LVU476
 1432 007c 0028     		cmp	r0, #0
 1433 007e 0AD1     		bne	.L84
 670:Core/Src/main.c **** 
 1434              		.loc 1 670 3 is_stmt 1 view .LVU477
 1435 0080 0648     		ldr	r0, .L85
 1436 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1437              	.LVL89:
 672:Core/Src/main.c **** 
 1438              		.loc 1 672 1 is_stmt 0 view .LVU478
 1439 0086 11B0     		add	sp, sp, #68
 1440              		@ sp needed
 1441 0088 00BD     		pop	{pc}
 1442              	.L81:
 639:Core/Src/main.c ****   }
 1443              		.loc 1 639 5 is_stmt 1 view .LVU479
 1444 008a FFF7FEFF 		bl	Error_Handler
 1445              	.LVL90:
 1446              	.L82:
 643:Core/Src/main.c ****   }
 1447              		.loc 1 643 5 view .LVU480
 1448 008e FFF7FEFF 		bl	Error_Handler
 1449              	.LVL91:
 1450              	.L83:
 654:Core/Src/main.c ****   }
 1451              		.loc 1 654 5 view .LVU481
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 50


 1452 0092 FFF7FEFF 		bl	Error_Handler
 1453              	.LVL92:
 1454              	.L84:
 665:Core/Src/main.c ****   }
 1455              		.loc 1 665 5 view .LVU482
 1456 0096 FFF7FEFF 		bl	Error_Handler
 1457              	.LVL93:
 1458              	.L86:
 1459 009a C046     		.align	2
 1460              	.L85:
 1461 009c 00000000 		.word	htim16
 1462 00a0 00440140 		.word	1073824768
 1463 00a4 FFFF0000 		.word	65535
 1464              		.cfi_endproc
 1465              	.LFE51:
 1467              		.section	.text.SystemClock_Config,"ax",%progbits
 1468              		.align	1
 1469              		.global	SystemClock_Config
 1470              		.syntax unified
 1471              		.code	16
 1472              		.thumb_func
 1474              	SystemClock_Config:
 1475              	.LFB45:
 297:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1476              		.loc 1 297 1 view -0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 80
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480 0000 10B5     		push	{r4, lr}
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 4, -8
 1483              		.cfi_offset 14, -4
 1484 0002 94B0     		sub	sp, sp, #80
 1485              		.cfi_def_cfa_offset 88
 298:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1486              		.loc 1 298 3 view .LVU484
 298:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1487              		.loc 1 298 22 is_stmt 0 view .LVU485
 1488 0004 3022     		movs	r2, #48
 1489 0006 0021     		movs	r1, #0
 1490 0008 08A8     		add	r0, sp, #32
 1491 000a FFF7FEFF 		bl	memset
 1492              	.LVL94:
 299:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1493              		.loc 1 299 3 is_stmt 1 view .LVU486
 299:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1494              		.loc 1 299 22 is_stmt 0 view .LVU487
 1495 000e 1024     		movs	r4, #16
 1496 0010 1022     		movs	r2, #16
 1497 0012 0021     		movs	r1, #0
 1498 0014 04A8     		add	r0, sp, #16
 1499 0016 FFF7FEFF 		bl	memset
 1500              	.LVL95:
 300:Core/Src/main.c **** 
 1501              		.loc 1 300 3 is_stmt 1 view .LVU488
 300:Core/Src/main.c **** 
 1502              		.loc 1 300 28 is_stmt 0 view .LVU489
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 51


 1503 001a 1022     		movs	r2, #16
 1504 001c 0021     		movs	r1, #0
 1505 001e 6846     		mov	r0, sp
 1506 0020 FFF7FEFF 		bl	memset
 1507              	.LVL96:
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1508              		.loc 1 305 3 is_stmt 1 view .LVU490
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1509              		.loc 1 305 36 is_stmt 0 view .LVU491
 1510 0024 1223     		movs	r3, #18
 1511 0026 0893     		str	r3, [sp, #32]
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1512              		.loc 1 306 3 is_stmt 1 view .LVU492
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1513              		.loc 1 306 30 is_stmt 0 view .LVU493
 1514 0028 113B     		subs	r3, r3, #17
 1515 002a 0B93     		str	r3, [sp, #44]
 307:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1516              		.loc 1 307 3 is_stmt 1 view .LVU494
 307:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1517              		.loc 1 307 32 is_stmt 0 view .LVU495
 1518 002c 0D93     		str	r3, [sp, #52]
 308:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1519              		.loc 1 308 3 is_stmt 1 view .LVU496
 308:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1520              		.loc 1 308 41 is_stmt 0 view .LVU497
 1521 002e 0C94     		str	r4, [sp, #48]
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1522              		.loc 1 309 3 is_stmt 1 view .LVU498
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1523              		.loc 1 309 43 is_stmt 0 view .LVU499
 1524 0030 0E94     		str	r4, [sp, #56]
 310:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1525              		.loc 1 310 3 is_stmt 1 view .LVU500
 311:Core/Src/main.c ****   {
 1526              		.loc 1 311 3 view .LVU501
 311:Core/Src/main.c ****   {
 1527              		.loc 1 311 7 is_stmt 0 view .LVU502
 1528 0032 08A8     		add	r0, sp, #32
 1529 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1530              	.LVL97:
 311:Core/Src/main.c ****   {
 1531              		.loc 1 311 6 view .LVU503
 1532 0038 0028     		cmp	r0, #0
 1533 003a 17D1     		bne	.L91
 318:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1534              		.loc 1 318 3 is_stmt 1 view .LVU504
 318:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1535              		.loc 1 318 31 is_stmt 0 view .LVU505
 1536 003c 0723     		movs	r3, #7
 1537 003e 0493     		str	r3, [sp, #16]
 320:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1538              		.loc 1 320 3 is_stmt 1 view .LVU506
 320:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1539              		.loc 1 320 34 is_stmt 0 view .LVU507
 1540 0040 0023     		movs	r3, #0
 1541 0042 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 52


 321:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1542              		.loc 1 321 3 is_stmt 1 view .LVU508
 321:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1543              		.loc 1 321 35 is_stmt 0 view .LVU509
 1544 0044 0693     		str	r3, [sp, #24]
 322:Core/Src/main.c **** 
 1545              		.loc 1 322 3 is_stmt 1 view .LVU510
 322:Core/Src/main.c **** 
 1546              		.loc 1 322 36 is_stmt 0 view .LVU511
 1547 0046 0793     		str	r3, [sp, #28]
 324:Core/Src/main.c ****   {
 1548              		.loc 1 324 3 is_stmt 1 view .LVU512
 324:Core/Src/main.c ****   {
 1549              		.loc 1 324 7 is_stmt 0 view .LVU513
 1550 0048 0021     		movs	r1, #0
 1551 004a 04A8     		add	r0, sp, #16
 1552 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1553              	.LVL98:
 324:Core/Src/main.c ****   {
 1554              		.loc 1 324 6 view .LVU514
 1555 0050 0028     		cmp	r0, #0
 1556 0052 0DD1     		bne	.L92
 328:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1557              		.loc 1 328 3 is_stmt 1 view .LVU515
 328:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 1558              		.loc 1 328 38 is_stmt 0 view .LVU516
 1559 0054 2123     		movs	r3, #33
 1560 0056 0093     		str	r3, [sp]
 329:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1561              		.loc 1 329 3 is_stmt 1 view .LVU517
 329:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1562              		.loc 1 329 38 is_stmt 0 view .LVU518
 1563 0058 0023     		movs	r3, #0
 1564 005a 0293     		str	r3, [sp, #8]
 330:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1565              		.loc 1 330 3 is_stmt 1 view .LVU519
 330:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1566              		.loc 1 330 36 is_stmt 0 view .LVU520
 1567 005c 0393     		str	r3, [sp, #12]
 331:Core/Src/main.c ****   {
 1568              		.loc 1 331 3 is_stmt 1 view .LVU521
 331:Core/Src/main.c ****   {
 1569              		.loc 1 331 7 is_stmt 0 view .LVU522
 1570 005e 6846     		mov	r0, sp
 1571 0060 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1572              	.LVL99:
 331:Core/Src/main.c ****   {
 1573              		.loc 1 331 6 view .LVU523
 1574 0064 0028     		cmp	r0, #0
 1575 0066 05D1     		bne	.L93
 335:Core/Src/main.c **** 
 1576              		.loc 1 335 1 view .LVU524
 1577 0068 14B0     		add	sp, sp, #80
 1578              		@ sp needed
 1579 006a 10BD     		pop	{r4, pc}
 1580              	.L91:
 313:Core/Src/main.c ****   }
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 53


 1581              		.loc 1 313 5 is_stmt 1 view .LVU525
 1582 006c FFF7FEFF 		bl	Error_Handler
 1583              	.LVL100:
 1584              	.L92:
 326:Core/Src/main.c ****   }
 1585              		.loc 1 326 5 view .LVU526
 1586 0070 FFF7FEFF 		bl	Error_Handler
 1587              	.LVL101:
 1588              	.L93:
 333:Core/Src/main.c ****   }
 1589              		.loc 1 333 5 view .LVU527
 1590 0074 FFF7FEFF 		bl	Error_Handler
 1591              	.LVL102:
 1592              		.cfi_endproc
 1593              	.LFE45:
 1595              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1596              		.align	2
 1597              	.LC12:
 1598 0000 20202020 		.ascii	"      \000"
 1598      202000
 1599              		.section	.text.main,"ax",%progbits
 1600              		.align	1
 1601              		.global	main
 1602              		.syntax unified
 1603              		.code	16
 1604              		.thumb_func
 1606              	main:
 1607              	.LFB44:
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1608              		.loc 1 116 1 view -0
 1609              		.cfi_startproc
 1610              		@ Volatile: function does not return.
 1611              		@ args = 0, pretend = 0, frame = 1080
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1614              		.cfi_def_cfa_offset 20
 1615              		.cfi_offset 4, -20
 1616              		.cfi_offset 5, -16
 1617              		.cfi_offset 6, -12
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 3E4C     		ldr	r4, .L96
 1621 0004 A544     		add	sp, sp, r4
 1622              		.cfi_def_cfa_offset 1112
 121:Core/Src/main.c **** 
 1623              		.loc 1 121 1 view .LVU529
 123:Core/Src/main.c **** mamma_mia.header.width = 0x7f;
 1624              		.loc 1 123 1 view .LVU530
 123:Core/Src/main.c **** mamma_mia.header.width = 0x7f;
 1625              		.loc 1 123 21 is_stmt 0 view .LVU531
 1626 0006 FFAC     		add	r4, sp, #1020
 1627 0008 3834     		adds	r4, r4, #56
 1628 000a A723     		movs	r3, #167
 1629 000c 2370     		strb	r3, [r4]
 124:Core/Src/main.c **** mamma_mia.header.height = 0x3f;
 1630              		.loc 1 124 1 is_stmt 1 view .LVU532
 124:Core/Src/main.c **** mamma_mia.header.height = 0x3f;
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 54


 1631              		.loc 1 124 24 is_stmt 0 view .LVU533
 1632 000e 283B     		subs	r3, r3, #40
 1633 0010 6370     		strb	r3, [r4, #1]
 125:Core/Src/main.c **** mamma_mia.header.byte_cnt_h = 0x03;
 1634              		.loc 1 125 1 is_stmt 1 view .LVU534
 125:Core/Src/main.c **** mamma_mia.header.byte_cnt_h = 0x03;
 1635              		.loc 1 125 25 is_stmt 0 view .LVU535
 1636 0012 403B     		subs	r3, r3, #64
 1637 0014 A370     		strb	r3, [r4, #2]
 126:Core/Src/main.c **** mamma_mia.header.byte_cnt_l = 0xf5;
 1638              		.loc 1 126 1 is_stmt 1 view .LVU536
 126:Core/Src/main.c **** mamma_mia.header.byte_cnt_l = 0xf5;
 1639              		.loc 1 126 29 is_stmt 0 view .LVU537
 1640 0016 3C3B     		subs	r3, r3, #60
 1641 0018 E370     		strb	r3, [r4, #3]
 127:Core/Src/main.c **** 
 1642              		.loc 1 127 1 is_stmt 1 view .LVU538
 127:Core/Src/main.c **** 
 1643              		.loc 1 127 29 is_stmt 0 view .LVU539
 1644 001a F233     		adds	r3, r3, #242
 1645 001c 2371     		strb	r3, [r4, #4]
 129:Core/Src/main.c **** {
 1646              		.loc 1 129 1 is_stmt 1 view .LVU540
 129:Core/Src/main.c **** {
 1647              		.loc 1 129 9 is_stmt 0 view .LVU541
 1648 001e 3849     		ldr	r1, .L96+4
 1649 0020 FC22     		movs	r2, #252
 1650 0022 9200     		lsls	r2, r2, #2
 1651 0024 11A8     		add	r0, sp, #68
 1652 0026 FFF7FEFF 		bl	memcpy
 1653              	.LVL103:
 196:Core/Src/main.c **** 
 1654              		.loc 1 196 1 is_stmt 1 view .LVU542
 196:Core/Src/main.c **** 
 1655              		.loc 1 196 16 is_stmt 0 view .LVU543
 1656 002a 11AB     		add	r3, sp, #68
 1657 002c A360     		str	r3, [r4, #8]
 206:Core/Src/main.c **** 
 1658              		.loc 1 206 3 is_stmt 1 view .LVU544
 1659 002e FFF7FEFF 		bl	HAL_Init
 1660              	.LVL104:
 213:Core/Src/main.c **** 
 1661              		.loc 1 213 3 view .LVU545
 1662 0032 FFF7FEFF 		bl	SystemClock_Config
 1663              	.LVL105:
 220:Core/Src/main.c ****   MX_I2C1_Init();
 1664              		.loc 1 220 3 view .LVU546
 1665 0036 FFF7FEFF 		bl	MX_GPIO_Init
 1666              	.LVL106:
 221:Core/Src/main.c ****   MX_USART1_UART_Init();
 1667              		.loc 1 221 3 view .LVU547
 1668 003a FFF7FEFF 		bl	MX_I2C1_Init
 1669              	.LVL107:
 222:Core/Src/main.c ****   MX_USART2_UART_Init();
 1670              		.loc 1 222 3 view .LVU548
 1671 003e FFF7FEFF 		bl	MX_USART1_UART_Init
 1672              	.LVL108:
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 55


 223:Core/Src/main.c ****   MX_ADC_Init();
 1673              		.loc 1 223 3 view .LVU549
 1674 0042 FFF7FEFF 		bl	MX_USART2_UART_Init
 1675              	.LVL109:
 224:Core/Src/main.c ****   MX_SPI1_Init();
 1676              		.loc 1 224 3 view .LVU550
 1677 0046 FFF7FEFF 		bl	MX_ADC_Init
 1678              	.LVL110:
 225:Core/Src/main.c ****   MX_SPI2_Init();
 1679              		.loc 1 225 3 view .LVU551
 1680 004a FFF7FEFF 		bl	MX_SPI1_Init
 1681              	.LVL111:
 226:Core/Src/main.c ****   MX_TIM3_Init();
 1682              		.loc 1 226 3 view .LVU552
 1683 004e FFF7FEFF 		bl	MX_SPI2_Init
 1684              	.LVL112:
 227:Core/Src/main.c ****   MX_TIM16_Init();
 1685              		.loc 1 227 3 view .LVU553
 1686 0052 FFF7FEFF 		bl	MX_TIM3_Init
 1687              	.LVL113:
 228:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1688              		.loc 1 228 3 view .LVU554
 1689 0056 FFF7FEFF 		bl	MX_TIM16_Init
 1690              	.LVL114:
 231:Core/Src/main.c ****   init_buf(&vb,128,64);
 1691              		.loc 1 231 3 view .LVU555
 232:Core/Src/main.c ****   init_display(0x78,&hi2c1);  //addr = 0x3c<<1
 1692              		.loc 1 232 3 view .LVU556
 1693 005a 0CAD     		add	r5, sp, #48
 1694 005c 4022     		movs	r2, #64
 1695 005e 8021     		movs	r1, #128
 1696 0060 2800     		movs	r0, r5
 1697 0062 FFF7FEFF 		bl	init_buf
 1698              	.LVL115:
 233:Core/Src/main.c **** 
 1699              		.loc 1 233 3 view .LVU557
 1700 0066 2749     		ldr	r1, .L96+8
 1701 0068 7820     		movs	r0, #120
 1702 006a FFF7FEFF 		bl	init_display
 1703              	.LVL116:
 236:Core/Src/main.c ****   //put_pixel(10,10,SET_C,&vb);
 1704              		.loc 1 236 3 view .LVU558
 1705 006e 2900     		movs	r1, r5
 1706 0070 0120     		movs	r0, #1
 1707 0072 FFF7FEFF 		bl	set_mode
 1708              	.LVL117:
 241:Core/Src/main.c ****   max6675 max6675B;
 1709              		.loc 1 241 3 view .LVU559
 242:Core/Src/main.c ****   max6675_init(&max6675A,CS_A_GPIO_Port,CS_A_Pin,&hspi1);
 1710              		.loc 1 242 3 view .LVU560
 243:Core/Src/main.c ****   max6675_init(&max6675B,CS_B_GPIO_Port,CS_B_Pin,&hspi1);
 1711              		.loc 1 243 3 view .LVU561
 1712 0076 244E     		ldr	r6, .L96+12
 1713 0078 8022     		movs	r2, #128
 1714 007a 9027     		movs	r7, #144
 1715 007c FF05     		lsls	r7, r7, #23
 1716 007e 3300     		movs	r3, r6
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 56


 1717 0080 1201     		lsls	r2, r2, #4
 1718 0082 3900     		movs	r1, r7
 1719 0084 08A8     		add	r0, sp, #32
 1720 0086 FFF7FEFF 		bl	max6675_init
 1721              	.LVL118:
 244:Core/Src/main.c ****   
 1722              		.loc 1 244 3 view .LVU562
 1723 008a 8022     		movs	r2, #128
 1724 008c 3300     		movs	r3, r6
 1725 008e 5200     		lsls	r2, r2, #1
 1726 0090 3900     		movs	r1, r7
 1727 0092 04A8     		add	r0, sp, #16
 1728 0094 FFF7FEFF 		bl	max6675_init
 1729              	.LVL119:
 246:Core/Src/main.c ****   //char temp_str[] = {0,0,0,0,0,0};
 1730              		.loc 1 246 3 view .LVU563
 246:Core/Src/main.c ****   //char temp_str[] = {0,0,0,0,0,0};
 1731              		.loc 1 246 8 is_stmt 0 view .LVU564
 1732 0098 1C4B     		ldr	r3, .L96+16
 1733 009a 1A68     		ldr	r2, [r3]
 1734 009c 0292     		str	r2, [sp, #8]
 1735 009e 9A88     		ldrh	r2, [r3, #4]
 1736 00a0 02AB     		add	r3, sp, #8
 1737 00a2 9A80     		strh	r2, [r3, #4]
 249:Core/Src/main.c ****   update_display(&vb);
 1738              		.loc 1 249 3 is_stmt 1 view .LVU565
 1739 00a4 0195     		str	r5, [sp, #4]
 1740 00a6 0123     		movs	r3, #1
 1741 00a8 0093     		str	r3, [sp]
 1742 00aa 0023     		movs	r3, #0
 1743 00ac 2068     		ldr	r0, [r4]
 1744 00ae 6168     		ldr	r1, [r4, #4]
 1745 00b0 A268     		ldr	r2, [r4, #8]
 1746 00b2 FFF7FEFF 		bl	put_vbc
 1747              	.LVL120:
 250:Core/Src/main.c ****   
 1748              		.loc 1 250 3 view .LVU566
 1749 00b6 2800     		movs	r0, r5
 1750 00b8 FFF7FEFF 		bl	update_display
 1751              	.LVL121:
 252:Core/Src/main.c **** 
 1752              		.loc 1 252 3 view .LVU567
 1753 00bc 1448     		ldr	r0, .L96+20
 1754 00be FFF7FEFF 		bl	HAL_Delay
 1755              	.LVL122:
 1756              	.L95:
 266:Core/Src/main.c ****   {
 1757              		.loc 1 266 3 discriminator 1 view .LVU568
 271:Core/Src/main.c ****     //put_string(0,0,"MAMMA MIA",MEDIUM,&vb);
 1758              		.loc 1 271 5 discriminator 1 view .LVU569
 1759 00c2 0498     		ldr	r0, [sp, #16]
 1760 00c4 0599     		ldr	r1, [sp, #20]
 1761 00c6 069A     		ldr	r2, [sp, #24]
 1762 00c8 079B     		ldr	r3, [sp, #28]
 1763 00ca FFF7FEFF 		bl	max6675_read_temp
 1764              	.LVL123:
 273:Core/Src/main.c ****     //float_to_char(max6675_read_temp(max6675A),temp_str);
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 57


 1765              		.loc 1 273 5 discriminator 1 view .LVU570
 1766 00ce 8021     		movs	r1, #128
 1767 00d0 9020     		movs	r0, #144
 1768 00d2 0902     		lsls	r1, r1, #8
 1769 00d4 C005     		lsls	r0, r0, #23
 1770 00d6 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1771              	.LVL124:
 278:Core/Src/main.c ****     
 1772              		.loc 1 278 5 discriminator 1 view .LVU571
 1773 00da 0CAC     		add	r4, sp, #48
 1774 00dc 0094     		str	r4, [sp]
 1775 00de 0123     		movs	r3, #1
 1776 00e0 4B22     		movs	r2, #75
 1777 00e2 0021     		movs	r1, #0
 1778 00e4 0020     		movs	r0, #0
 1779 00e6 FFF7FEFF 		bl	put_char
 1780              	.LVL125:
 282:Core/Src/main.c ****     HAL_Delay(500);    
 1781              		.loc 1 282 5 discriminator 1 view .LVU572
 1782 00ea 2000     		movs	r0, r4
 1783 00ec FFF7FEFF 		bl	update_display
 1784              	.LVL126:
 283:Core/Src/main.c ****   
 1785              		.loc 1 283 5 discriminator 1 view .LVU573
 1786 00f0 FA20     		movs	r0, #250
 1787 00f2 4000     		lsls	r0, r0, #1
 1788 00f4 FFF7FEFF 		bl	HAL_Delay
 1789              	.LVL127:
 266:Core/Src/main.c ****   {
 1790              		.loc 1 266 9 discriminator 1 view .LVU574
 1791 00f8 E3E7     		b	.L95
 1792              	.L97:
 1793 00fa C046     		.align	2
 1794              	.L96:
 1795 00fc BCFBFFFF 		.word	-1092
 1796 0100 00000000 		.word	.LC8
 1797 0104 00000000 		.word	hi2c1
 1798 0108 00000000 		.word	hspi1
 1799 010c 00000000 		.word	.LC12
 1800 0110 DC050000 		.word	1500
 1801              		.cfi_endproc
 1802              	.LFE44:
 1804              		.global	huart2
 1805              		.section	.bss.huart2,"aw",%nobits
 1806              		.align	2
 1809              	huart2:
 1810 0000 00000000 		.space	136
 1810      00000000 
 1810      00000000 
 1810      00000000 
 1810      00000000 
 1811              		.global	huart1
 1812              		.section	.bss.huart1,"aw",%nobits
 1813              		.align	2
 1816              	huart1:
 1817 0000 00000000 		.space	136
 1817      00000000 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 58


 1817      00000000 
 1817      00000000 
 1817      00000000 
 1818              		.global	htim16
 1819              		.section	.bss.htim16,"aw",%nobits
 1820              		.align	2
 1823              	htim16:
 1824 0000 00000000 		.space	72
 1824      00000000 
 1824      00000000 
 1824      00000000 
 1824      00000000 
 1825              		.global	htim3
 1826              		.section	.bss.htim3,"aw",%nobits
 1827              		.align	2
 1830              	htim3:
 1831 0000 00000000 		.space	72
 1831      00000000 
 1831      00000000 
 1831      00000000 
 1831      00000000 
 1832              		.global	hspi2
 1833              		.section	.bss.hspi2,"aw",%nobits
 1834              		.align	2
 1837              	hspi2:
 1838 0000 00000000 		.space	100
 1838      00000000 
 1838      00000000 
 1838      00000000 
 1838      00000000 
 1839              		.global	hspi1
 1840              		.section	.bss.hspi1,"aw",%nobits
 1841              		.align	2
 1844              	hspi1:
 1845 0000 00000000 		.space	100
 1845      00000000 
 1845      00000000 
 1845      00000000 
 1845      00000000 
 1846              		.global	hi2c1
 1847              		.section	.bss.hi2c1,"aw",%nobits
 1848              		.align	2
 1851              	hi2c1:
 1852 0000 00000000 		.space	84
 1852      00000000 
 1852      00000000 
 1852      00000000 
 1852      00000000 
 1853              		.global	hadc
 1854              		.section	.bss.hadc,"aw",%nobits
 1855              		.align	2
 1858              	hadc:
 1859 0000 00000000 		.space	64
 1859      00000000 
 1859      00000000 
 1859      00000000 
 1859      00000000 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 59


 1860              		.section	.rodata
 1861              		.align	2
 1862              	.LC8:
 1863 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1863      00000000 
 1863      00000000 
 1863      00
 1864 000d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\001\004"
 1864      00000000 
 1864      00000001 
 1864      04
 1865 001a 10080006 		.ascii	"\020\010\000\006\001\000\000\000\000\000\000\000\000"
 1865      01000000 
 1865      00000000 
 1865      00
 1866 0027 00010410 		.ascii	"\000\001\004\020\010\004\002\001\000\000\010\000\000"
 1866      08040201 
 1866      00000800 
 1866      00
 1867 0034 00000000 		.ascii	"\000\000\000\000\001\006\020\010\004\003\203\000\000"
 1867      01061008 
 1867      04038300 
 1867      00
 1868 0041 18000000 		.ascii	"\030\000\000\000\000\000\000\001\002\020\010\006\000"
 1868      00000001 
 1868      02100806 
 1868      00
 1869 004e 02001018 		.ascii	"\002\000\020\0300\000l \000\000\001\002\020\010\003"
 1869      30006C20 
 1869      00000102 
 1869      100803
 1870 005d 000E0018 		.ascii	"\000\016\000\030(08\356`\000\000\001\202\020\014\001"
 1870      283038EE 
 1870      60000001 
 1870      82100C01 
 1871 006d C1F8001C 		.ascii	"\301\370\000\034hxl\252\343\000\000\000\200\000\000"
 1871      68786CAA 
 1871      E3000000 
 1871      800000
 1872 007c 00010000 		.ascii	"\000\001\000\000\026HHE\253\247\200\000\000\300\000"
 1872      16484845 
 1872      ABA78000 
 1872      00C000
 1873 008b 00001D00 		.ascii	"\000\000\035\000\000\023\310HG)\244\200\000\000c\207"
 1873      0013C848 
 1873      4729A480 
 1873      00006387 
 1874 009b 7BFFE700 		.ascii	"{\377\347\000\000\020\010\214F)$\200\000\0000\000\000"
 1874      0010088C 
 1874      46292480 
 1874      00003000 
 1874      00
 1875 00ac 00020000 		.ascii	"\000\002\000\000\020\010\204F($\300\000\000\020\000"
 1875      10088446 
 1875      2824C000 
 1875      001000
 1876 00bb 00000200 		.ascii	"\000\000\002\000\000\020\010\204@($@\000\000\020\000"
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 60


 1876      00100884 
 1876      40282440 
 1876      00001000 
 1877 00cb 00000200 		.ascii	"\000\000\002\000\000\020\010\204@('\360\000\000\020"
 1877      00100884 
 1877      402827F0 
 1877      000010
 1878 00da 00000002 		.ascii	"\000\000\000\002\000\000\020\011\376@($@\000\000\020"
 1878      00001009 
 1878      FE402824 
 1878      40000010 
 1879 00ea 00000002 		.ascii	"\000\000\000\002\000\000\020\011\002@(,@\000\000\020"
 1879      00001009 
 1879      0240282C 
 1879      40000010 
 1880 00fa 00000002 		.ascii	"\000\000\000\002\000\000\020\011\002@((@\000\004\020"
 1880      00001009 
 1880      02402828 
 1880      40000410 
 1881 010a 00000006 		.ascii	"\000\000\000\006\000\000\020\011\003@((\000\000\004"
 1881      00001009 
 1881      03402828 
 1881      000004
 1882 0119 18001FFF 		.ascii	"\030\000\037\377\344\000\000\020\000\000\000\000 \000"
 1882      E4000010 
 1882      00000000 
 1882      2000
 1883 0127 00040FFF 		.ascii	"\000\004\017\377\360\000>\000\000\000\000\000\000\000"
 1883      F0003E00 
 1883      00000000 
 1883      0000
 1884 0135 00310004 		.ascii	"\0001\000\004\010\000\000\000\003\000\000\000\000\000"
 1884      08000000 
 1884      03000000 
 1884      0000
 1885 0143 00000031 		.ascii	"\000\000\0001\021\304\030\000\000\000\001\000\000\000"
 1885      11C41800 
 1885      00000100 
 1885      0000
 1886 0151 00000000 		.ascii	"\000\000\000\000\000;\021D\020\000\000\000\001\200\000"
 1886      003B1144 
 1886      10000000 
 1886      018000
 1887 0160 00000000 		.ascii	"\000\000\000\000\000\000/\021d\020\000\000\000\000\200"
 1887      00002F11 
 1887      64100000 
 1887      000080
 1888 016f 00000000 		.ascii	"\000\000\000\000\000\007\300!\023$\020\000\000\000\000"
 1888      0007C021 
 1888      13241000 
 1888      000000
 1889 017e 80000000 		.ascii	"\200\000\000\000\000\000\034@!\022$0\037\000\037\000"
 1889      00001C40 
 1889      21122430 
 1889      1F001F00 
 1890 018e 80000000 		.ascii	"\200\000\000\000\000\0000@!\022  \177\200\037\200\200"
 1890      00003040 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 61


 1890      21122020 
 1890      7F801F80 
 1890      80
 1891 019f 00000000 		.ascii	"\000\000\000\000\000 @!\023\340 \177\300?\300\200\000"
 1891      00204021 
 1891      13E0207F 
 1891      C03FC080 
 1891      00
 1892 01b0 00000000 		.ascii	"\000\000\000\000 \300!\026  \177@?@\200\000\000\000"
 1892      20C02116 
 1892      20207F40 
 1892      3F408000 
 1892      0000
 1893 01c2 00002080 		.ascii	"\000\000 \200\000\004$ ~@~`\200\000\000\000\000<a\200"
 1893      00042420 
 1893      7E407E60 
 1893      80000000 
 1893      003C6180 
 1894 01d6 00002420 		.ascii	"\000\000$ >`\037\300\200\000\000\000\000dA\000\000\000"
 1894      3E601FC0 
 1894      80000000 
 1894      00644100 
 1894      0000
 1895 01e8 002003E0 		.ascii	"\000 \003\340\000\000\200\000\000\000\000DC\000\000"
 1895      00008000 
 1895      00000044 
 1895      430000
 1896 01f7 00002000 		.ascii	"\000\000 \000\000\000\000\200\000\000\000\000\304B\000"
 1896      00000080 
 1896      00000000 
 1896      C44200
 1897 0206 00000020 		.ascii	"\000\000\000 \000\020\000\000\200\000\000\000\000\204"
 1897      00100000 
 1897      80000000 
 1897      0084
 1898 0214 42000000 		.ascii	"B\000\000\000\000 \000\020\200\000\200\000\000\000\000"
 1898      00200010 
 1898      80008000 
 1898      000000
 1899 0223 84420000 		.ascii	"\204B\000\000\000\000 \0000\000\000\200\000\000\000"
 1899      00002000 
 1899      30000080 
 1899      000000
 1900 0232 00844200 		.ascii	"\000\204B\000\000\000\000 \000 \000\001\200\000\000"
 1900      00000020 
 1900      00200001 
 1900      800000
 1901 0241 00008442 		.ascii	"\000\000\204B\000\000\000\000 | \177\375\000\000\000"
 1901      00000000 
 1901      207C207F 
 1901      FD000000 
 1902 0251 00008442 		.ascii	"\000\000\204B\000\000\000\000!\377\360\177\377\000\000"
 1902      00000000 
 1902      21FFF07F 
 1902      FF0000
 1903 0260 000000C4 		.ascii	"\000\000\000\304\302\003\370\000\000'\377\370\377\377"
 1903      C203F800 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 62


 1903      0027FFF8 
 1903      FFFF
 1904 026e 0F800000 		.ascii	"\017\200\000\000\000F\202\016\014\000\000?\377\374\370"
 1904      0046820E 
 1904      0C00003F 
 1904      FFFCF8
 1905 027d 1F0FC000 		.ascii	"\037\017\300\000\000\000B\202\030\006\001\300\037\377"
 1905      00004282 
 1905      180601C0 
 1905      1FFF
 1906 028b FFF00F8C 		.ascii	"\377\360\017\214\340\000\000\001\343\2030\002\007\340"
 1906      E0000001 
 1906      E3833002 
 1906      07E0
 1907 0299 3C003FE0 		.ascii	"<\000?\340\007\200`\000\000\003a\301\340\003\016p\270"
 1907      07806000 
 1907      000361C1 
 1907      E0030E70 
 1907      B8
 1908 02aa 001FE783 		.ascii	"\000\037\347\203\300`\000\000\002q\300\303\340\3140"
 1908      C0600000 
 1908      0271C0C3 
 1908      E0CC30
 1909 02b9 FC0016FC 		.ascii	"\374\000\026\374\203\300`\000\000\002P\340\0060L\001"
 1909      83C06000 
 1909      000250E0 
 1909      06304C01 
 1910 02c9 E601C1C1 		.ascii	"\346\001\301\301\202\340\340\000\000\002x`\004\030L"
 1910      82E0E000 
 1910      00027860 
 1910      04184C
 1911 02d8 03E200FE 		.ascii	"\003\342\000\376\003\004\177\340\000\000\002,\000\014"
 1911      03047FE0 
 1911      0000022C 
 1911      000C
 1912 02e6 0FCE03C3 		.ascii	"\017\316\003\303\000`\016\014?\300\000\000\0036\000"
 1912      00600E0C 
 1912      3FC00000 
 1912      033600
 1913 02f5 0819870F 		.ascii	"\010\031\207\017\301\20088\010?\200\000\000\001\037"
 1913      C1803838 
 1913      083F8000 
 1913      00011F
 1914 0304 00001887 		.ascii	"\000\000\030\207\377\200\200\017\340\030\000\000\000"
 1914      FF80800F 
 1914      E0180000 
 1914      00
 1915 0311 00018000 		.ascii	"\000\001\200\000\0000\203\377\000\300\000\0000\000\000"
 1915      003083FF 
 1915      00C00000 
 1915      300000
 1916 0320 000000C0 		.ascii	"\000\000\000\300\000\037\340\201\374\000`\000\000`\000"
 1916      001FE081 
 1916      FC006000 
 1916      006000
 1917 032f 00000000 		.ascii	"\000\000\000\000`\000\000\003\200\000\0008\000\001\340"
 1917      60000003 
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 63


 1917      80000038 
 1917      0001E0
 1918 033e 00000000 		.ascii	"\000\000\000\000\00000\000\006\000\000\000/\000\003"
 1918      00303000 
 1918      06000000 
 1918      2F0003
 1919 034d 30000000 		.ascii	"0\000\000\000\000\000\030\020\000\014\000\000\000a\340"
 1919      00001810 
 1919      000C0000 
 1919      0061E0
 1920 035c 1E100000 		.ascii	"\036\020\000\000\000\000\000\014\030\000\030\000\000"
 1920      0000000C 
 1920      18001800 
 1920      00
 1921 0369 00E03FF0 		.ascii	"\000\340?\360\030\000\000\000\000\000\003\014\0000\000"
 1921      18000000 
 1921      0000030C 
 1921      003000
 1922 0378 0007B007 		.ascii	"\000\007\260\007\000<\000\000\000\000\000\001\206\000"
 1922      003C0000 
 1922      00000001 
 1922      8600
 1923 0386 E000001D 		.ascii	"\340\000\000\035\030\007\200f\000\000\000\000\000\000"
 1923      18078066 
 1923      00000000 
 1923      0000
 1924 0394 C38F8000 		.ascii	"\303\217\200\000\000\360\016\017\341\303\000\000\000"
 1924      00F00E0F 
 1924      E1C30000 
 1924      00
 1925 03a1 00000040 		.ascii	"\000\000\000@\004\000\000\003\201\003\3107\001\200\000"
 1925      04000003 
 1925      8103C837 
 1925      018000
 1926 03b0 00000000 		.ascii	"\000\000\000\000p\004\000\000\016\000\000x\374\000\300"
 1926      70040000 
 1926      0E000078 
 1926      FC00C0
 1927 03bf 00000000 		.ascii	"\000\000\000\000\000X\004\000\000\010\000\000\001\200"
 1927      00580400 
 1927      00080000 
 1927      0180
 1928 03cd 00600000 		.ascii	"\000`\000\000\000\000\000O\334\000\0008\000\000\003"
 1928      0000004F 
 1928      DC000038 
 1928      000003
 1929 03dc 00002000 		.ascii	"\000\000 \000\000\000\000\000@\004\000\000\340\000\000"
 1929      00000000 
 1929      40040000 
 1929      E00000
 1930 03eb 03000030 		.ascii	"\003\000\0000\000"
 1930      00
 1931              		.text
 1932              	.Letext0:
 1933              		.file 3 "c:\\users\\arist\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1934              		.file 4 "c:\\users\\arist\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1935              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030xc.h"
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 64


 1936              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1937              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1938              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1939              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1940              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1941              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1942              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1943              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 1944              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 1945              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1946              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 1947              		.file 17 "Core/Inc/GEVA.h"
 1948              		.file 18 "Core/Inc/stm32_max6675.h"
 1949              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1950              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 1951              		.file 21 "Core/Inc/main.h"
 1952              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1953              		.file 23 "Core/Inc/stm32_ssd1306_i2c.h"
 1954              		.file 24 "<built-in>"
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:266    .text.MX_GPIO_Init:00000110 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:282    .text.float_to_char:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:288    .text.float_to_char:00000000 float_to_char
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:472    .text.float_to_char:000000ac $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:478    .text.Error_Handler:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:484    .text.Error_Handler:00000000 Error_Handler
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:516    .text.MX_I2C1_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:521    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:617    .text.MX_I2C1_Init:0000005c $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1851   .bss.hi2c1:00000000 hi2c1
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:624    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:629    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:692    .text.MX_USART1_UART_Init:00000030 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1816   .bss.huart1:00000000 huart1
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:698    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:703    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:766    .text.MX_USART2_UART_Init:00000030 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1809   .bss.huart2:00000000 huart2
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:772    .text.MX_ADC_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:777    .text.MX_ADC_Init:00000000 MX_ADC_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:976    .text.MX_ADC_Init:000000d0 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1858   .bss.hadc:00000000 hadc
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:982    .text.MX_SPI1_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:987    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1069   .text.MX_SPI1_Init:00000048 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1844   .bss.hspi1:00000000 hspi1
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1075   .text.MX_SPI2_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1080   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1163   .text.MX_SPI2_Init:00000048 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1837   .bss.hspi2:00000000 hspi2
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1169   .text.MX_TIM3_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1174   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1291   .text.MX_TIM3_Init:00000078 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1830   .bss.htim3:00000000 htim3
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1298   .text.MX_TIM16_Init:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1303   .text.MX_TIM16_Init:00000000 MX_TIM16_Init
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1461   .text.MX_TIM16_Init:0000009c $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1823   .bss.htim16:00000000 htim16
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1468   .text.SystemClock_Config:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1474   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1596   .rodata.main.str1.4:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1600   .text.main:00000000 $t
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1606   .text.main:00000000 main
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1795   .text.main:000000fc $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1806   .bss.huart2:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1813   .bss.huart1:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1820   .bss.htim16:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1827   .bss.htim3:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1834   .bss.hspi2:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1841   .bss.hspi1:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1848   .bss.hi2c1:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1855   .bss.hadc:00000000 $d
C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s:1861   .rodata:00000000 $d
ARM GAS  C:\Users\arist\AppData\Local\Temp\ccDdEr7g.s 			page 66



UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_fcmplt
__aeabi_fmul
__aeabi_f2iz
__aeabi_idivmod
__aeabi_uidivmod
__aeabi_uidiv
__aeabi_idiv
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_SPI_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_TIM_Base_Init
HAL_TIMEx_ConfigBreakDeadTime
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
memcpy
HAL_Init
init_buf
init_display
set_mode
max6675_init
put_vbc
update_display
HAL_Delay
max6675_read_temp
HAL_GPIO_TogglePin
put_char
